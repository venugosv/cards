apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: anz.ctm.debitcards.debitcardinquiry
  description: "This API is used to retrieve debit card details from CTM Provider. It interacts with the ctm_PCMCardInq_v8 CTM message. This API is integrated with the Advanced Data Protection component of Encryption as a Service. The input for this API is expected to be a tokenised debit card number, not a clear-text one. The input card number will be sent to EaaS ADP for detokenisation prior to making a call to CTM. If the response contains any card numbers, these will also be be tokenised in the API response."
  links:
    - url: https://sandpit.developer.dev.anz/eapicorp01/sandpit/ibm_apim/swaggerjson/ZGViaXQtY2FyZC1pbnF1aXJ5OjIuMS4w
      title: Spec
      icon: dashboard
spec:
  type: openapi
  lifecycle: production
  definition: |
    ---
    info:
      x-ibm-name: debit-card-inquiry
      title: Debit Card Inquiry
      version: 2.1.0
      description: |
        This API is used to retrieve debit card details from CTM Provider. It interacts with the `ctm_PCMCardInq_v8` CTM message. __This API is integrated with the Advanced Data Protection component of Encryption as a Service__. The input for this API is expected to be a __tokenised__ debit card number, not a clear-text one. The input card number will be sent to EaaS ADP for detokenisation prior to making a call to CTM. If the response contains any card numbers, these will also be be tokenised in the API response.
        ### What is new in v2.1.0
          * Exposed wallet provider details such as wallet provider name and the number of devices registered to a particular Provider.
      contact:
        name: ANZ EAPI
        email: eapi@anz.com
      x-api-ownership:
        technology-owner:
          name: Darren Pratt
          role: Tech Area Lead - Core Systems
          email: Darren.Pratt@anz.com
        business-owner:
          name: Shannon Peachey
          role: Tribe Lead - Deposits
          email: Shannon.Peachey@anz.com
        EIS-contact:
          name: Dev Sharma
          role: Product Owner
          email: Dev.Sharma@anz.com
      x-information-security:
        confidentiality-rating: Restricted
        integrity-rating: Trusted
    schemes:
    - https
    basePath: /daw/debit-card-inquiry
    securityDefinitions:
      clientIdHeader:
        in: header
        type: apiKey
        description: api client id
        name: X-IBM-Client-Id
    security:
    - clientIdHeader: []
    swagger: "2.0"
    x-ibm-configuration:
      enforced: true
      phase: realized
      testable: true
      categories:
      - LOB/Cards
      - Phase/Prod Ready
    paths:
      /debit-cards/{cardNumber}:
        parameters:
        - $ref: '#/parameters/cardNumber'
        - $ref: '#/parameters/DetailedResponse'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/X-Originating-App'
        - $ref: '#/parameters/X-Operator-Id'
        - $ref: '#/parameters/X-Operator-Branch'
        - $ref: '#/parameters/X-Workstation'
        get:
          summary: Retrieve Debit Card Details
          description: This operation is used to retrieve debit card details. The `cardNumber`
            path parameter expects a tokenised debit card number to be presented. This
            will be sent to Advanced Data Protection for detokenisation, prior to calling
            CTM. The `detail` query parameter can optionally be used to get the longer-form
            version of the response.
          operationId: debitCardInquiry
          produces:
          - application/json
          x-scopes:
          - AU.RETAIL.DEBITCARDS.READ
          responses:
            200:
              description: Success.
              schema:
                $ref: '#/definitions/DebitCardResponse'
            400:
              description: Bad Request
              schema:
                $ref: '#/definitions/Error'
            401:
              description: Unauthorized
              schema:
                $ref: '#/definitions/Error'
            403:
              description: Forbidden
              schema:
                $ref: '#/definitions/Error'
            404:
              description: Not Found
              schema:
                $ref: '#/definitions/Error'
            422:
              description: Invalid
              schema:
                $ref: '#/definitions/Error'
            500:
              description: Internal Server Error
              schema:
                $ref: '#/definitions/Error'
            503:
              description: Service Unavailable
              schema:
                $ref: '#/definitions/Error'
    definitions:
      DebitCardResponse:
        type: object
        title: DebitCardsResponse
        description: Response object model
        properties:
          title:
            type: string
            maxLength: 10
            description: Title of the cardholder
            example: MS
          firstName:
            type: string
            maxLength: 23
            description: First Name of the cardholder
            example: JULIA
          lastName:
            type: string
            maxLength: 26
            description: Last name of the cardholder
            example: YOON
          productCode:
            type: string
            description: The card's product code
            example: PDV
          subProductCode:
            type: string
            description: The card's sub-product code
            example: "031"
          statusCode:
            type: string
            description: |
              Can be one of the following Status Codes:
              | Code  |
              | ----  |
              | C   |
              | D   |
              | E   |
              | I   |
              | L   |
              | S   |
              | U   |
              | T   |
              | A   |
              | B   |
              | F   |
              | G   |
              | H   |
              | P   |
            example: L
          status:
            type: string
            description: |
              Can be one of the following Statuses:
              | Code  |
              | ----  |
              | Closed |
              | Delinquent (Return Card)   |
              | Delinquent (Retain Card)   |
              | Issued                 |
              | Lost                   |
              | Stolen                 |
              | Unissued (N&D ICI Cards)     |
              | Temporary Block          |
              | Block ATM                    |
              | Block ATM & POS (Exclude CNP)|
              | Block ATM, POS, CNP & BCH    |
              | Block ATM, POS & CNP         |
              | Block CNP                    |
              | Block POS (exclude CNP)      |
            example: Lost
          accountsLinkedCount:
            type: integer
            description: Number of Accounts linked to the card
            example: 2
          expiryDate:
            type: string
            description: The card's expiry date in YYMM format
            example: "1707"
          issueReason:
            type: string
            description: |
              The isse reason for the debit card. Populated for Scheme Debit Card only, for all other cards will contain Spaces
              Can be one of the following Reasons for Card issued :
               | Code  | Description |
               | ----  | ----        |
               | 01  | New           |
               | 02  | Reissue       |
               | 03  | Lost or Stolen|
               | 04  | Replacement   |
            example: "03"
          activationStatus:
            type: boolean
            description: |
              Can be one of the following Activation Status of the Card:
              | Code  | Description |
              | ----  | ----        |
              | true  | Card is activated |
              | false | Card is inactive, needs activation    |
            example: true
          limits:
            type: array
            items:
              type: object
              properties:
                type:
                  type: string
                  enum:
                  - ATMEFTPOS
                  - APO
                  description: The types of limits set on the card and their values
                  example: ATMEFTPOS
                dailyLimit:
                  type: integer
                  description: Daily Limit
                  example: 1000
                dailyLimitAvailable:
                  type: integer
                  description: Daily Available Limit
                  example: 887
                lastTransaction:
                  type: string
                  format: date
                  description: Date of the last transaction in YYYY-MM-DD format
                  example: "2015-08-25"
          embossingLine1:
            type: string
            description: The first embossed line on the physical card
            example: MS JULIA
          embossingLine2:
            type: string
            description: The second embossed line on the physical card
            example: YOON
          closedDate:
            type: string
            format: date
            description: The closing date of debit card in YYYY-MM-DD format (if applicable)
            example: "2014-05-25"
          statusReason:
            type: string
            description: |
              Possible Status codes:
              | Definition                        |
              | ----------------                  |
              | With PIN or Account Related       |
              | Without PIN                       |
              | Damaged                           |
              | Last Prime debit linkage deleted  |
              | Closed                            |
              | Fraud                             |
            example: With PIN or Account Related
          totalCards:
            type: integer
            description: Total number of cards
            example: 4
          dispatchedMethod:
            type: string
            description: |
              Possible Method used to dispatch the card:
              | Definition                        |
              | ----------------                  |
              | Mail       |
              | Sent to Branch                    |
              |                                   |
            example: Mail
          replacementCount:
            type: integer
            description: Number of times the card has been replaced
            example: 2
          issueBranch:
            type: integer
            description: Branch ID from where the card was issued
            example: 3011
          collectionBranch:
            type: integer
            description: Branch ID from where the card was collected
            example: 3352
          collectionStatus:
            type: string
            description: |
              Possible Status codes:
              | Definition |
              | ---------  |
              | Card Not Collected    |
              | Card Collected        |
              |                      |
            example: Card Collected
          replacedDate:
            type: string
            format: date
            description: Card replacement date in YYYY-MM-DD format
            example: "2010-11-12"
          reissueDate:
            type: string
            format: date
            description: Reissue date of the card in YYYY-MM-DD format
            example: "2014-06-06"
          issueDate:
            type: string
            format: date
            description: Card issue date of the in YYYY-MM-DD format
            example: "2004-05-25"
          cardNumber:
            type: object
            properties:
              token:
                type: string
                maxLength: 23
                example: "4512222222222222"
                description: The tokenised debit card number exactly as recieved in the
                  request
              last4digits:
                type: string
                maxLength: 4
                example: 0986
                description: The last four digits of the __real__ debit card number recieved
                  in the request
          oldCardNumber:
            type: object
            properties:
              token:
                type: string
                maxLength: 23
                example: "3333333333333333"
                description: Old card number (if applicable). __The value of this field
                  will be tokenised__
              last4digits:
                type: string
                maxLength: 4
                example: "6548"
                description: Old card number (if applicable). The value of this field
                  will be the last four digits of the __real__ old card number
          newCardNumber:
            type: object
            properties:
              token:
                type: string
                maxLength: 23
                example: "2222222222222222"
                description: New card number (if applicable). __The value of this field
                  will be tokenised__
              last4digits:
                type: string
                maxLength: 4
                example: "4466"
                description: New card number (if applicable). The value of this field
                  will be the last four digits of the __real__ new card number
          prevExpiryDate:
            type: string
            description: Previous card's expiry date in YYYYMM format
            example: "201407"
          pinChangeDate:
            type: string
            format: date
            description: Last PIN change date in YYYYMM format
            example: "2012-05-27"
          pinChangedCount:
            type: integer
            description: Number of times the PIN has been changed
            example: 3
          lastPinFailed:
            type: string
            format: date
            description: Last PIN failure date in YYYYMM format
            example: "2014-09-02"
          pinFailedCount:
            type: integer
            description: Number of times the PIN has failed
            example: 8
          statusChangedDate:
            type: string
            format: date
            description: Card status changed date in YYYYMM format
            example: "2018-09-02"
          detailsChangedDate:
            type: string
            format: date
            description: Card details changed date in YYYYMM format
            example: "2016-10-20"
          statusChangedUserID:
            type: string
            description: Card status changed User ID
            example: X794139
          detailsChangedUserID:
            type: string
            description: Card details changed User ID
            example: X794139
          feeWaivedReason:
            type: string
            description: Fee Waived Reason
            example: ""
          designCode:
            type: string
            description: The design code determines the card appearance as understood
              by the embosser
            example: "905"
          designColor:
            type: string
            description: |
              Can be one of the following Colors of the Card:
                 | Color  | Product Code | SubProduct Code |
                 | ----  | ----        | ---- |
                 | grey  | PDB | 001|
                 | blue  | PDB | 002|
                 | green | PDB | 003|
                 | black | PDV | 001|
                 | blue  | PDV | 002|
                 | pink  | PDV | 003|
            example: blue
          merchantUpdatePreference:
            type: boolean
            description: When this field is set to true (i.e. Opted-In), it means the
              customer is allowing Visa to pass on their updated card number and expiry
              date information to participating merchants, so any payments set up from
              this card at registered Merchants are not interrupted. Recurring bills will
              continue, without the need for the customer to advise them. The customer
              however, has the option to ‘Opt-out’, by contacting ANZ, where-by this new
              indicator will need to be updated to false.
            example: true
          cardControlPreference:
            type: boolean
            description: When set to true, it indicates customer has enabled visa card
              control to better manage their finance. This field will also be included
              in CTM Non-Monetary events published to CIM, so that it can be passed on
              to CAM and Falcon. Updates to the indicator will also be logged by CTM to
              be passed to Base24 every 15 minutes in the ‘trickle feed’ process.
            example: true
          wallets:
            type: object
            description: Shows the number of times this card has been tokenised into each
              type of digital Wallet
            properties:
              applePay:
                type: integer
                description: Number of devices registered to the 'ApplePay' wallet
                minimum: 0
                maximum: 999
                example: 2
              googlePay:
                type: integer
                description: Number of devices registered to the 'GooglePay' wallet
                minimum: 0
                maximum: 999
                example: 1
              samsungPay:
                type: integer
                description: Number of devices registered to the 'SamsungPay' wallet
                minimum: 0
                maximum: 999
                example: 0
              fitness:
                type: integer
                description: Number of devices registered to the 'Fitness' wallet (eg.
                  FitBit, Garmin, etc)
                minimum: 0
                maximum: 999
                example: 0
              eCommerce:
                type: integer
                description: Number of devices registered to the 'eCommerce wallet (eg.
                  NetFlix, PayPal, etc – essentially merchant that use a token instead
                  of keeping Card on File)'
                minimum: 0
                maximum: 999
                example: 0
              other:
                type: integer
                description: Number of devices registered to the 'other' wallet.
                minimum: 0
                maximum: 999
                example: 0
      Error:
        type: object
        properties:
          httpCode:
            type: string
            example: "422"
            description: |
              Can be one of the following HTTP-STATUS Codes:
              | Code        | Detail |
              | ----        | ---    |
              | Bad Request | 400    |
              | Unauthorized | 401    |
              | Forbidden | 403   |
              | Not Found | 404    |
              | Invalid | 422    |
              | Internal Server Error | 500    |
              | Service Unavailable | 503    |
          httpMessage:
            type: string
            example: Unprocessable Entity
            description: |
              Can be one of the following HTTP-STATUS Codes:
              | Code        | Detail |
              | ----        | ---    |
              | 400 | Bad Request    |
              | 401 | Unauthorized    |
              | 403 | Forbidden    |
              | 404 | Not Found     |
              | 422 | Unprocessable Entity    |
              | 500 | Internal Server Error    |
              | 503 | Service Unavailable    |
          type:
            type: string
            example: Business Error
            description: |
              Can be one of the following HTTP-STATUS Codes:
              | Detail |
              | ---    |
              | Business Error     |
              | Validation Error   |
              | Connection Error   |
          location:
            type: string
            example: CTM
            description: |
              Can be one of the following HTTP-STATUS Codes:
              | Detail |
              | ---    |
              | CAP    |
              | API Gateway |
          errors:
            type: array
            items:
              type: object
              properties:
                statusCode:
                  type: integer
                  example: 422
                statusMessage:
                  type: string
                  example: Schema Validation failure
                moreInformation:
                  type: string
                  example: Invalid Card Number length.Minimum length should be 8 while
                    found 7
    parameters:
      Authorization:
        x-example: Bearer <REPLACE_WITH_JWT>
        description: JWT in Bearer schema (Bearer <JWT-String>)
        in: header
        required: true
        type: string
        name: Authorization
      X-B3-TraceId:
        x-example: 89b7fe72db29f5e6225ba02770da98d6
        description: A 128 bit length (lower hex) unique identifier for the trace. This
          is only generated when the first request is made. Every span in a trace shares
          this ID.
        in: header
        required: true
        type: string
        name: X-B3-TraceId
      X-B3-SpanId:
        x-example: efcf4dd20496ee2e69cad1250e68545c
        description: A 128 bit length (lower hex) unique ID of the service processing
          the request.
        in: header
        required: true
        type: string
        name: X-B3-SpanId
      X-B3-ParentSpanId:
        x-example: 3837dc3ba8fb342d70abf6454f27390d
        description: The ID of the originator of the request. This will generally be the
          same as the Trace ID for the first instance. A span without this ID is considered
          the root of the trace.
        in: header
        required: false
        type: string
        name: X-B3-ParentSpanId
      X-Originating-App:
        name: X-Originating-App
        type: string
        maxLength: 3
        required: true
        in: header
        description: A predefined string representing the consuming application, agreed
          with CTM
        x-example: XA1
      X-Operator-Id:
        name: X-Operator-Id
        type: string
        maxLength: 8
        required: false
        in: header
        description: Operator Id that initiated the transaction
        x-example: LANID123
      X-Operator-Branch:
        name: X-Operator-Branch
        type: number
        maxLength: 6
        required: false
        in: header
        description: Branch number where transaction was initiated
        x-example: "5535"
      X-Workstation:
        name: X-Workstation
        type: string
        maxLength: 8
        required: false
        in: header
        description: Workstation Id where transaction was initiated
        x-example: CSPWK01
      cardNumber:
        name: cardNumber
        type: string
        required: true
        in: path
        description: __Debit Card  Number to inquire against in its tokenised form__
        x-example: "4512222222222222"
      DetailedResponse:
        name: detail
        in: query
        required: false
        description: This query parameter can be used to get longer-form details about
          the card
        x-example: true
        type: string
    x-ibm-endpoints:
    - endpointUrl: https://api.corp.dev.anz
      description: Custom Gateway API Endpoint
      type:
      - production
      - development
    ...
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: anz.ctm.debitcards.debitcardstatus
  description: "This API provides operations to activate and modify status of a debit card in CTM based on debit card number. It interacts with the ctm_CardStatChng_v1 CTM message. This API is integrated with the Advanced Data Protection component of Encryption as a Service. The input for this API is expected to be a tokenised debit card number, not a clear-text one. The input card number will be sent to EaaS ADP for detokenisation prior to making a call to CTM. This minor version upgrade for Debit Card Status API supports z/OS v3 architecture. There are no changes to the consumer contract from Debit Card Status v2.0."
  links:
    - url: https://sandpit.developer.dev.anz/eapicorp01/sandpit/ibm_apim/swaggerjson/ZGViaXQtY2FyZC1zdGF0dXM6Mi4xLjA%2C
      title: Spec
      icon: dashboard
spec:
  type: openapi
  lifecycle: production
  definition: |
    ---
    info:
      x-ibm-name: debit-card-status
      title: Debit Card Status
      version: 2.1.0
      description: This API provides operations to activate and modify status of a debit
        card in CTM based on debit card number. It interacts with the `ctm_CardStatChng_v1`
        CTM message. __This API is integrated with the Advanced Data Protection component
        of Encryption as a Service__. The input for this API is expected to be a __tokenised__
        debit card number, not a clear-text one. The input card number will be sent to
        EaaS ADP for detokenisation prior to making a call to CTM. This minor version
        upgrade for Debit Card Status API supports z/OS v3 architecture. There are no
        changes to the consumer contract from Debit Card Status v2.0.
      contact:
        name: ANZ EAPI
        email: eapi@anz.com
      x-api-ownership:
        technology-owner:
          name: Darren Pratt
          role: Tech Area Lead - Core Systems
          email: Darren.Pratt@anz.com
        business-owner:
          name: Shannon Peachey
          role: Tribe Lead - Deposits
          email: Shannon.Peachey@anz.com
        EIS-contact:
          name: Dilara Yenisey
          role: Product Owner
          email: Dilara.Yenisey@anz.com
      x-information-security:
        confidentiality-rating: Restricted
        integrity-rating: Trusted
    schemes:
    - https
    basePath: /daw/debit-card-status
    securityDefinitions:
      clientIdHeader:
        in: header
        type: apiKey
        description: api client id
        name: X-IBM-Client-Id
    security:
    - clientIdHeader: []
    swagger: "2.0"
    x-ibm-configuration:
      enforced: true
      phase: realized
      testable: true
      categories:
      - LOB/Cards
      - Phase/Prod Ready
    paths:
      /debit-cards/{cardNumber}/status:
        parameters:
        - $ref: '#/parameters/cardNumber'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/X-Originating-App'
        - $ref: '#/parameters/X-Operator-Id'
        - $ref: '#/parameters/X-Operator-Branch'
        - $ref: '#/parameters/X-Workstation'
        patch:
          summary: Debit Cards Status
          operationId: debitCardsStatus
          description: This operation is used to modify a status of a debit card in CTM.
            Typical use case might be to report a card as lost or stolen. The `cardNumber`
            path parameter expects a tokenised debit card number to be presented. This
            will be sent to Advanced Data Protection for detokenisation, prior to calling
            CTM.
          x-scopes:
          - AU.RETAIL.DEBITCARDS.UPDATE
          x-security-scopes:
          - AU.RETAIL.DEBITCARDS.UPDATE
          produces:
          - application/json
          parameters:
          - name: requestBody
            in: body
            required: true
            description: Debit card status data
            schema:
              $ref: '#/definitions/DebitCardStatusRequest'
          responses:
            200:
              description: 200 OK
            400:
              description: Bad Request
              schema:
                $ref: '#/definitions/ErrorResponse'
            401:
              description: Unauthorized
              schema:
                $ref: '#/definitions/ErrorResponse'
            403:
              description: Forbidden
              schema:
                $ref: '#/definitions/ErrorResponse'
            404:
              description: Not Found
              schema:
                $ref: '#/definitions/ErrorResponse'
            500:
              description: Internal Server Error
              schema:
                $ref: '#/definitions/ErrorResponse'
            default:
              description: Unexpected error
              schema:
                $ref: '#/definitions/ErrorResponse'
      /debit-cards/{cardNumber}/activate:
        parameters:
        - $ref: '#/parameters/cardNumber'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/X-Originating-App'
        - $ref: '#/parameters/X-Operator-Id'
        - $ref: '#/parameters/X-Operator-Branch'
        - $ref: '#/parameters/X-Workstation'
        post:
          summary: Activate Debit Cards
          operationId: debitCardsActivate
          description: This operation is used to activate an inactive debit card in CTM.
            The `cardNumber` path parameter expects a tokenised debit card number to be
            presented. This will be sent to Advanced Data Protection for detokenisation,
            prior to calling CTM.
          x-scopes:
          - AU.RETAIL.DEBITCARDS.UPDATE
          x-security-scopes:
          - AU.RETAIL.DEBITCARDS.UPDATE
          produces:
          - application/json
          responses:
            200:
              description: 200 OK
            400:
              description: Bad Request
              schema:
                $ref: '#/definitions/ErrorResponse'
            401:
              description: Unauthorized
              schema:
                $ref: '#/definitions/ErrorResponse'
            403:
              description: Forbidden
              schema:
                $ref: '#/definitions/ErrorResponse'
            404:
              description: Not Found
              schema:
                $ref: '#/definitions/ErrorResponse'
            500:
              description: Internal Server Error
              schema:
                $ref: '#/definitions/ErrorResponse'
            default:
              description: Unexpected error
              schema:
                $ref: '#/definitions/ErrorResponse'
    definitions:
      DebitCardStatusRequest:
        type: object
        properties:
          status:
            type: string
            enum:
            - Delinquent (Retain Card)
            - Lost
            - Stolen
            - Issued
            - Temporary Block
            - Block ATM
            - Block ATM & POS (Exclude Card Not Present)
            - Block ATM, POS, Card Not Present & MyTell
            - Block ATM, POS & Card Not Present
            - Block Card Not Present
            - Block POS (Exclude Card Not Present)
            example: Stolen
            description: Status to be updated on a debit card. The default status on a
              card is 'Issued'
          statusReason:
            type: string
            enum:
            - With PIN or Account Related
            - Without PIN
            - Closed
            - Damaged
            - Fraud
            example: Without PIN
            description: '| Status          | Valid Status Reason                                              |
              |-----------------|------------------------------------------------------------------|
              | Lost            | With PIN or Account Related, Without PIN                         |
              | Stolen          | With PIN or Account Related, Without PIN                         |
              | Delinquent      | With PIN or Account Related, Without PIN, Closed, Damaged,
              Fraud | | Temporary Block | Do not send                                                      |
              | Issued          | Do not send                                                      |
              | Block Statuses  | Do not send                                                      |'
        required:
        - status
      ErrorResponse:
        type: object
        description: Standard Error Respone
        required:
        - httpCode
        additionalProperties: true
        properties:
          httpCode:
            type: string
            description: HTTP Status Code
            example: "422"
          httpMessage:
            type: string
            description: HTTP Reason Phrase
            example: Bad Request
          type:
            type: string
            description: Provider Error or Validation Error
            example: ProviderError
          moreInformation:
            type: string
            description: Additional error information
            example: Invalid address type
          errors:
            type: array
            items:
              type: object
              description: Detailed error object list
              properties:
                code:
                  type: string
                  description: Error code
                  example: "999"
                message:
                  type: string
                  description: Error message
                  example: Invalid request parameters
                description:
                  type: string
                  description: Error description
                  example: Invalid address type
                type:
                  type: string
                  description: Error type
                  example: RuntimeError
                severity:
                  type: string
                  description: Error severity
                  example: Fatal
                location:
                  type: string
                  description: Error Location
                  example: CTM
    parameters:
      Authorization:
        x-example: Bearer <REPLACE_WITH_JWT>
        description: JWT in Bearer schema (Bearer <JWT-String>)
        in: header
        required: true
        type: string
        name: Authorization
      X-B3-TraceId:
        x-example: 89b7fe72db29f5e6225ba02770da98d6
        description: A 128 bit length (lower hex) unique identifier for the trace. This
          is only generated when the first request is made. Every span in a trace shares
          this ID.
        in: header
        required: true
        type: string
        name: X-B3-TraceId
      X-B3-SpanId:
        x-example: efcf4dd20496ee2e69cad1250e68545c
        description: A 128 bit length (lower hex) unique ID of the service processing
          the request.
        in: header
        required: true
        type: string
        name: X-B3-SpanId
      X-B3-ParentSpanId:
        x-example: 3837dc3ba8fb342d70abf6454f27390d
        description: The ID of the originator of the request. This will generally be the
          same as the Trace ID for the first instance. A span without this ID is considered
          the root of the trace.
        in: header
        required: false
        type: string
        name: X-B3-ParentSpanId
      X-Originating-App:
        name: X-Originating-App
        type: string
        maxLength: 3
        required: true
        in: header
        description: A predefined string representing the consuming application, agreed
          with CTM
        x-example: XA1
      X-Operator-Id:
        name: X-Operator-Id
        type: string
        maxLength: 8
        required: false
        in: header
        description: Operator Id that initiated the transaction
        x-example: LANID123
      X-Operator-Branch:
        name: X-Operator-Branch
        type: number
        maxLength: 6
        required: false
        in: header
        description: Branch number where transaction was initiated
        x-example: "5535"
      X-Workstation:
        name: X-Workstation
        type: string
        maxLength: 8
        required: false
        in: header
        description: Workstation Id where transaction was initiated
        x-example: CSPWK01
      cardNumber:
        name: cardNumber
        type: string
        required: true
        in: path
        description: __Debit Card  Number to perform actions against in its tokenised
          form__
        x-example: "4512222222222222"
    x-ibm-endpoints:
    - endpointUrl: https://api.corp.dev.anz
      description: Custom Gateway API Endpoint
      type:
      - production
      - development
    ...
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: anz.ctm.debitcards.debitcardmaintenance
  description: "This API provides resources to replace a debit card, update a cardholder's personal details, as well as update certain card preferences in CTM. This API makes use of the ctm_PCMCardMnt_v8 service. The behaviour of this API is heavily influenced by the status a card is in, and as such, this API should be used in conjunction with the Debit Card Status 2.0.0 API and the Debit Card Inquiry 2.0.0 API. This API deals with tokenised card numbers (with ADP) and hence consumers to send tokenised card numbers in their request; also it returns tokenised card number in response resulting in consumers to detokenise the card numbers with the help of ADP, though it the response contains last four digits of the real card number for the consumers to handle it effectively."
  links:
    - url: https://sandpit.developer.dev.anz/eapicorp01/sandpit/ibm_apim/swaggerjson/ZGViaXQtY2FyZC1tYWludGVuYW5jZToyLjEuMA%2C%2C
      title: Spec
      icon: dashboard
spec:
  type: openapi
  lifecycle: production
  definition: |
    ---
    info:
      x-ibm-name: debit-card-maintenance
      title: Debit Card Maintenance
      version: 2.1.0
      description: |
        This API provides resources to replace a debit card, update a cardholder's personal details, as well as update certain card preferences in CTM. This API makes use of the `ctm_PCMCardMnt_v8` service. The behaviour of this API is heavily influenced by the *status* a card is in, and as such, this API should be used in conjunction with the __Debit Card Status 2.0.0 API__ and the __Debit Card Inquiry 2.0.0 API__. This API deals with __tokenised card numbers (with ADP)__ and hence consumers to send tokenised card numbers in their request; also it returns tokenised card number in response resulting in consumers to detokenise the card numbers with the help of ADP, though it the response contains last four digits of the real card number for the consumers to handle it effectively."
        # What is new in v2.1.0
          * For the replaceCard operation, ensure title field is populated, otherwise it will be overwritten to spaces.
          * For the updateDetails operation, omit the title field in case no update required; only pass the title field if an update is required.
          * Provided a provision to add customers phone number and/or email address which is required by the Embosser to notify the customer via SMS or email once the card has been embossed and is ready to be dispatched.
      contact:
        name: ANZ EAPI
        email: eapi@anz.com
      x-api-ownership:
        technology-owner:
          name: Darren Pratt
          role: Tech Area Lead - Core Systems
          email: Darren.Pratt@anz.com
        business-owner:
          name: Shannon Peachey
          role: Tribe Lead - Deposits
          email: Shannon.Peachey@anz.com
        EIS-contact:
          name: Dev Sharma
          role: Product Owner
          email: Dev.Sharma@anz.com
      x-information-security:
        confidentiality-rating: Restricted
        integrity-rating: Trusted
    schemes:
    - https
    basePath: /daw/debit-card-maintenance
    securityDefinitions:
      clientIdHeader:
        in: header
        type: apiKey
        description: api client id
        name: X-IBM-Client-Id
    security:
    - clientIdHeader: []
    swagger: "2.0"
    x-ibm-configuration:
      enforced: true
      phase: realized
      testable: true
      categories:
      - LOB/Cards
      - Phase/Prod Ready
    paths:
      /debit-cards/{cardNumber}/replace:
        parameters:
        - $ref: '#/parameters/cardNumber'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/X-Originating-App'
        - $ref: '#/parameters/X-Operator-Id'
        - $ref: '#/parameters/X-Operator-Branch'
        - $ref: '#/parameters/X-Workstation'
        post:
          summary: Replace Card
          operationId: replaceCard
          description: "This operation allows for replacing a debit card with either new,
            or old card details. \n1. Ordering a replacement card with __old__ details,
            i.e. same PAN as the current card, can only be done if the card is in a *Issued*
            status. In this case, the `plasticType` should be set to `Same Number`, and
            you are able to update any of the other details on the card before it is despatched.
            A possible use-case for this is if a card is physically damaged, and a customer
            would like to request a replacement.\n2. Ordering a replacement card with
            __new__ details, i.e. different PAN from the current card, can only be done
            if a card is in a *Lost* or *Stolen* status. In this case, the `plasticType`
            should be set to `New Number`, and you are __not__ able to update any other
            details on the card before it is despatched. The only use-case for this is
            when a card has either been Lost, Stolen, or the card details compromised,
            allowing a customer to have a replacement card with new details sent.\nRefer
            to __Debit Card Status 2.0.0__ on how to set a status on a card, and __Debit
            Card Inquiry 2.0.0__ on how to retrieve the current status.\nTo update preferences
            or personal details __without__ requesting a replacement, refer to the other
            operations in this API \n\n \t __Ensure title is populated, otherwise it will
            be overwritten to empty strings.__"
          x-scopes:
          - AU.RETAIL.DEBITCARDS.CREATE
          x-security-scopes:
          - AU.RETAIL.DEBITCARDS.CREATE
          consumes:
          - application/json
          produces:
          - application/json
          parameters:
          - name: requestBody
            in: body
            required: true
            description: Replace debit card request data
            schema:
              $ref: '#/definitions/ReplaceCardRequest'
          responses:
            200:
              description: 200 OK
              schema:
                $ref: '#/definitions/ReplaceCardResponse'
            400:
              description: Bad Request
              schema:
                $ref: '#/definitions/ErrorResponse'
            401:
              description: Unauthorized
              schema:
                $ref: '#/definitions/ErrorResponse'
            403:
              description: Forbidden
              schema:
                $ref: '#/definitions/ErrorResponse'
            404:
              description: Not Found
              schema:
                $ref: '#/definitions/ErrorResponse'
            500:
              description: Internal Server Error
              schema:
                $ref: '#/definitions/ErrorResponse'
            default:
              description: Unexpected error
              schema:
                $ref: '#/definitions/ErrorResponse'
      /debit-cards/{cardNumber}/preferences:
        parameters:
        - $ref: '#/parameters/cardNumber'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/X-Originating-App'
        - $ref: '#/parameters/X-Operator-Id'
        - $ref: '#/parameters/X-Operator-Branch'
        - $ref: '#/parameters/X-Workstation'
        patch:
          summary: Card Preferences
          operationId: cardPreferences
          description: "Update preferences on a debit card such as auto merchant updates
            or card control. \n* The merchant update flag is used to help maintain the
            continuity of the payment experience in a variety of reissuance situations.
            Currently, all debit and credit cards are ‘Opted-Out’ for VAU (Visa Account
            Updater) updates. Scheme debit cards however, are “Opted In”. To ‘Opt-In’
            for VAU updates, means the customer allows Visa to pass on their updated card
            number and expiry date information to participating merchants, so any payments
            set up from this card at registered Merchants are not interrupted. Recurring
            bills will continue, without the need for the customer to advise them. The
            customer however, has the option to ‘Opt-out’, by contacting ANZ, where-by
            this flag will need to be updated to false.\n* The card controls indicator
            can be updated for Visa Debit Cards and Access Debit Cards. Updates to this
            flag will be logged by CTM to be passed to Base24 every 15 minutes in the
            ‘trickle feed’ process. Base24 will maintain this on their CRDD database,
            which will be used to decide if a card transactions needs to be authorised
            at Visa as well as CTM.\n* Mailing Address fields & Postcode fields are now
            Mandatory fields for a Card Replacement from this version onwards.\n* New
            field Card Withdrawal limit, can be updated using this version, however Plastic
            type must equal Spaces. You cannot update the card withdrawal limit and order
            a card replacement at the same time."
          x-scopes:
          - AU.RETAIL.DEBITCARDS.UPDATE
          x-security-scopes:
          - AU.RETAIL.DEBITCARDS.UPDATE
          consumes:
          - application/json
          produces:
          - application/json
          parameters:
          - name: requestBody
            in: body
            required: true
            description: Set Preferences request data
            schema:
              $ref: '#/definitions/SetPreferencesRequest'
          responses:
            200:
              description: 200 OK
            400:
              description: Bad Request
              schema:
                $ref: '#/definitions/ErrorResponse'
            401:
              description: Unauthorized
              schema:
                $ref: '#/definitions/ErrorResponse'
            403:
              description: Forbidden
              schema:
                $ref: '#/definitions/ErrorResponse'
            404:
              description: Not Found
              schema:
                $ref: '#/definitions/ErrorResponse'
            500:
              description: Internal Server Error
              schema:
                $ref: '#/definitions/ErrorResponse'
            default:
              description: Unexpected error
              schema:
                $ref: '#/definitions/ErrorResponse'
      /debit-cards/{cardNumber}/details:
        parameters:
        - $ref: '#/parameters/cardNumber'
        - $ref: '#/parameters/Authorization'
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/X-Originating-App'
        - $ref: '#/parameters/X-Operator-Id'
        - $ref: '#/parameters/X-Operator-Branch'
        - $ref: '#/parameters/X-Workstation'
        patch:
          summary: Update Details
          operationId: updateDetails
          description: This operation is used to only update (*maintain*) the personal
            details surrounding a card in CTM. These details can only be updated if the
            card is in *Issued* status. Personal details on the card cannot be edited
            once a card status is set to *Lost* or *Stolen* status. To update preferences,
            or to request a replacement card, refer to the other operations in this API.
          x-scopes:
          - AU.RETAIL.DEBITCARDS.UPDATE
          x-security-scopes:
          - AU.RETAIL.DEBITCARDS.UPDATE
          consumes:
          - application/json
          produces:
          - application/json
          parameters:
          - name: requestBody
            in: body
            required: true
            description: Update card details request data
            schema:
              $ref: '#/definitions/UpdateDetailsRequest'
          responses:
            200:
              description: 200 OK
            400:
              description: Bad Request
              schema:
                $ref: '#/definitions/ErrorResponse'
            401:
              description: Unauthorized
              schema:
                $ref: '#/definitions/ErrorResponse'
            403:
              description: Forbidden
              schema:
                $ref: '#/definitions/ErrorResponse'
            404:
              description: Not Found
              schema:
                $ref: '#/definitions/ErrorResponse'
            500:
              description: Internal Server Error
              schema:
                $ref: '#/definitions/ErrorResponse'
            default:
              description: Unexpected error
              schema:
                $ref: '#/definitions/ErrorResponse'
    definitions:
      ReplaceCardRequest:
        type: object
        required:
        - plasticType
        - firstName
        - lastName
        - despatchMethod
        - mailingAddress
        properties:
          plasticType:
            type: string
            enum:
            - New Number
            - Same Number
            example: New Number
            description: First option will have a new plastic dispatched with new card
              details (in the case of a Lost or Stolen card), and the second will have
              a new plastic dispatched with the same details as the previous card (in
              the case of a damaged card).
          title:
            type: string
            maxLength: 10
            example: Dr
            description: Ensure title field is populated, otherwise it will be overwritten
              to spaces.
          firstName:
            type: string
            maxLength: 20
            example: John
            description: Card holder first name
          lastName:
            type: string
            maxLength: 21
            example: Doe
            description: Card holder last name.  Total length of first name and last name
              must not exceed 26 characters.
          embossingLine1:
            type: string
            maxLength: 26
            example: Dr John Doe
            description: Embossing line1 on the card
          embossingLine2:
            type: string
            maxLength: 26
            example: ABC Services Limited
            description: Embossing line2 on the card
          despatchMethod:
            type: string
            enum:
            - Mail
            - Branch
            example: Branch
            description: Denotes where the replacement card must be sent.  Setting collection
              branch is mandatory if despatch method is chosen as Branch.
          collectionBranch:
            type: string
            maxLength: 4
            example: "5535"
            description: Bank branch code from where the card will be collected by the
              customer.  Must be set to a valid value if despatch method is is chosen
              as Branch.
          designCode:
            type: string
            maxLength: 3
            example: "905"
            description: Determines the card appearance.  If not supplied, CTM will apply
              the current card's design.
          merchantUpdatePreference:
            type: boolean
            example: "true"
            description: When this field is set to true (i.e. Opted-In), it means the
              customer is allowing Visa to pass on their updated card number and expiry
              date information to participating merchants, so any payments set up from
              this card at registered Merchants are not interrupted. Recurring bills will
              continue, without the need for the customer to advise them. The customer
              however, has the option to ‘Opt-out’, by contacting ANZ, where-by this new
              indicator will need to be updated to false.  This attribute will be removed
              from this operation when CTM makes changes to accept space in future.  Until
              then, consumers are expected to send the appropriate value.  If a value
              is not provided by the consumer, integration layer will send a blank space
              and CTM will reject the request.
          mailingAddress:
            type: object
            description: Mailing address object is mandatory if the `despatchMethod` field
              is set to `Mail`
            properties:
              addressLine1:
                type: string
                maxLength: 36
                example: 12 Unit A
                description: The postal address line 1 to where the Debit Card will sent
                  to
                pattern: ^[a-zA-Z0-9 .,'()/-]+$
              addressLine2:
                type: string
                maxLength: 36
                example: Collingwood Avenue
                description: The postal address line 2 to where the Debit Card will sent
                  to
                pattern: ^[a-zA-Z0-9 .,'()/-]+$
              addressLine3:
                type: string
                maxLength: 36
                example: Collingwood Avenue
                description: The postal address line 3 to where the Debit Card will sent
                  to
                pattern: ^[a-zA-Z0-9 .,'()/-]+$
              postCode:
                type: string
                maxLength: 10
                example: "3000"
                description: Post Code of despatch address.
                pattern: ^[a-zA-Z0-9 .,'()/-]+$
              countryCode:
                type: string
                minLength: 2
                maxLength: 2
                example: CN
                description: 'WARNING: New Scheme Debit cards VDC and SDC cannot be sent
                  overseas, so the request will reject in batch. Debit cards however,
                  can be sent overseas.  Two Character Country code value: ''CN'' for
                  China. This field is `only` required to be supplied if Country code
                  is not Australia.'
                pattern: ^[a-zA-Z]+$
              countryName:
                type: string
                maxLength: 36
                example: Australia
                description: The name of the Country that the Card will be sent to if
                  that Country is not Australia. This field is not required for Australian
                  Addresses
                pattern: ^[a-zA-Z0-9 .,'()/-]+$
            required:
            - addressLine1
            - addressLine2
            - postCode
          contactInformation:
            type: object
            description: Define the contact details `phone number` and `email` that will
              be notified when the new card is despatched. This data is only used for
              ANZx Visa debit cards to notify the card is ready to be despatched.
            properties:
              phoneNumber:
                type: string
                maxLength: 10
                description: Customer Phone Number. This field is pass through to the
                  embosser for an sms notification of card despatch.
                example: "0433322344"
              email:
                type: string
                maxLength: 240
                description: Email Address. This field is pass through to the embosser
                  for an email notification of card despatch.
                example: myemail@anz.com
      UpdateDetailsRequest:
        type: object
        properties:
          title:
            type: string
            maxLength: 10
            example: Dr
            description: Omit the title field in case no update required; only pass the
              title field if an update is required
          firstName:
            type: string
            maxLength: 20
            example: John
            description: Card holder first name
          lastName:
            type: string
            maxLength: 21
            example: Doe
            description: Card holder last name.  Total length of first name and last name
              must not exceed 26 characters.
          embossingLine1:
            type: string
            maxLength: 26
            example: Dr John Doe
            description: Embossing line1 on the card
          embossingLine2:
            type: string
            maxLength: 26
            example: ABC Services Limited
            description: Embossing line2 on the card
          withdrawalLimit:
            type: string
            maxLength: 5
            example: "00600"
            description: Withdrawal limit (ATM Daily Limit) for the debit card. Only applicable
              for Card Maintenance where Plastic type = spaces.
      ReplaceCardResponse:
        type: object
        properties:
          cardNumber:
            type: object
            properties:
              token:
                type: string
                maxLength: 23
                example: "2222222222222222"
                description: New card number (if applicable). __The value of this field
                  will be tokenised__
              last4digits:
                type: string
                maxLength: 4
                example: "4466"
                description: New card number (if applicable). The value of this field
                  will be the last four digits of the __real__ new card number
      SetPreferencesRequest:
        type: object
        properties:
          merchantUpdatePreference:
            type: boolean
            example: "true"
            description: When this field is set to true (i.e. Opted-In), it means the
              customer is allowing Visa to pass on their updated card number and expiry
              date information to participating merchants, so any payments set up from
              this card at registered Merchants are not interrupted. Recurring bills will
              continue, without the need for the customer to advise them. The customer
              however, has the option to ‘Opt-out’, by contacting ANZ, where-by this new
              indicator will need to be updated to false.
          cardControlPreference:
            type: boolean
            example: "true"
            description: When set to true, it indicates customer has enabled visa card
              control to better manage their finance. This field will also be included
              in CTM Non-Monetary events published to CIM, so that it can be passed on
              to CAM and Falcon. Updates to the indicator will also be logged by CTM to
              be passed to Base24 every 15 minutes in the ‘trickle feed’ process.
      ErrorResponse:
        type: object
        description: Standard Error Respone
        required:
        - httpCode
        additionalProperties: true
        properties:
          httpCode:
            type: string
            description: HTTP Status Code
            example: "422"
          httpMessage:
            type: string
            description: HTTP Reason Phrase
            example: Bad Request
          type:
            type: string
            description: Provider Error or Validation Error
            example: ProviderError
          moreInformation:
            type: string
            description: Additional error information
            example: Invalid address type
          errors:
            type: array
            items:
              type: object
              description: Detailed error object list
              properties:
                code:
                  type: string
                  description: Error code
                  example: "999"
                message:
                  type: string
                  description: Error message
                  example: Invalid request parameters
                description:
                  type: string
                  description: Error description
                  example: Invalid card number
                type:
                  type: string
                  description: Error type
                  example: RuntimeError
                severity:
                  type: string
                  description: Error severity
                  example: Fatal
                location:
                  type: string
                  description: Error Location
                  example: CAP
    parameters:
      Authorization:
        x-example: Bearer <REPLACE_WITH_JWT>
        description: JWT in Bearer schema (Bearer <JWT-String>)
        in: header
        required: true
        type: string
        name: Authorization
      X-B3-TraceId:
        x-example: 89b7fe72db29f5e6225ba02770da98d6
        description: A 128 bit length (lower hex) unique identifier for the trace. This
          is only generated when the first request is made. Every span in a trace shares
          this ID.
        in: header
        required: true
        type: string
        name: X-B3-TraceId
      X-B3-SpanId:
        x-example: efcf4dd20496ee2e69cad1250e68545c
        description: A 128 bit length (lower hex) unique ID of the service processing
          the request.
        in: header
        required: true
        type: string
        name: X-B3-SpanId
      X-B3-ParentSpanId:
        x-example: 3837dc3ba8fb342d70abf6454f27390d
        description: The ID of the originator of the request. This will generally be the
          same as the Trace ID for the first instance. A span without this ID is considered
          the root of the trace.
        in: header
        required: false
        type: string
        name: X-B3-ParentSpanId
      X-Originating-App:
        name: X-Originating-App
        type: string
        required: true
        in: header
        description: A predefined string representing the consuming application, agreed
          with CTM
        x-example: OBA
      X-Operator-Id:
        name: X-Operator-Id
        type: string
        maxLength: 8
        required: false
        in: header
        description: Operator Id that initiated the transaction
        x-example: LANID123
      X-Operator-Branch:
        name: X-Operator-Branch
        type: number
        maxLength: 6
        required: false
        in: header
        description: Branch number where transaction was initiated
        x-example: "5535"
      X-Workstation:
        name: X-Workstation
        type: string
        maxLength: 8
        required: false
        in: header
        description: Workstation Id where transaction was initiated
        x-example: CSPWK01
      cardNumber:
        name: cardNumber
        type: string
        required: true
        in: path
        description: __Debit Card  Number to perform actions against in its tokenised
          form__
        x-example: "4512222222222222"
    x-ibm-endpoints:
    - endpointUrl: https://api.corp.dev.anz
      description: Custom Gateway API Endpoint
      type:
      - production
      - development
    ...
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: anz.echidna.cardandpinservices
  description: "Salt Echidna-RemotePIN application provides the following REST Web Service APIs to perform PIN related operations. Upon receiving the requests through the Web Services, the RemotePIN service communicates with the Tandem server to perform the PIN operation then passes through the appropriate responses back to the caller application. Typically, the caller application is an internal bank authentication web application, which proxies the user end requests (requests from a bank mobile application for an example). This specification is based on version 18.4.0.34493 spec."
  links:
    - url: https://sandpit.developer.dev.anz/eapicorp01/sandpit/ibm_apim/swaggerjson/Y2FyZC1hbmQtcGluLXNlcnZpY2VzOjEuMC4w
      title: Spec
      icon: dashboard
spec:
  type: openapi
  lifecycle: production
  definition: |
    ---
    info:
      x-ibm-name: card-and-pin-services
      title: Card and Pin Services
      version: 1.0.0
      description: "Salt Echidna-RemotePIN application provides the following REST Web
        Service APIs to perform PIN related operations. Upon receiving the requests through
        the Web Services, the RemotePIN service communicates with the Tandem server to
        perform the PIN operation then passes through the appropriate responses back to
        the caller application. Typically, the caller application is an internal bank
        authentication web application, which proxies the user end requests (requests
        from a bank mobile application for an example). \nThis specification is based
        on version 18.4.0.34493 spec."
      contact:
        name: ANZ EAPI
        email: eapi@anz.com
      x-api-ownership:
        technology-owner:
          name: Gatenby, Grant
          role: Technology Owner
          email: Grant.Gatenby@anz.com
        business-owner:
          name: Ahluwalia, Gurmaninder Pal Singh
          role: TAL - Customer Authentication, TSO and Group Centre
          email: GurmaninderPalSingh.Ahluwalia@anz.com
        EIS-contact:
          name: Dev Sharma
          role: Product Owner
          email: Dev.Sharma@anz.com
      x-information-security:
        confidentiality-rating: Restricted
        integrity-rating: Trusted
    schemes:
    - https
    basePath: /ca/card-and-pin-services
    produces:
    - application/json
    - text/xml
    - application/x-www-form-urlencoded
    securityDefinitions:
      clientIdHeader:
        in: header
        type: apiKey
        description: api client id
        name: X-IBM-Client-Id
    security:
    - clientIdHeader: []
    swagger: "2.0"
    x-ibm-configuration:
      enforced: true
      phase: realized
      testable: true
      categories:
      - Zone/Ecom
      - Phase/DEV Ready
      - LOB/Common
      - Phase/SIT Ready
    paths:
      /getWrappingKey:
        post:
          summary: rpinAuth getWrappingKey via POST of JSON or XML
          description: Obtain the wrapping key i.e. RSA public key's modulus and public
            exponent (hex encoded), SKI, X509 Certificate, etc
          operationId: rpin.getWrappingKeyPOST.json
          consumes:
          - application/json
          - text/xml
          x-scopes:
          - AU.RETAIL.PUBLICKEY.READ
          parameters:
          - in: body
            name: request
            description: |-
              Generated web-service request-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#getWrappingKey}

              Obtain the wrapping key i.e. RSA public key's modulus and public exponent (hex encoded), SKI, X509 Certificate, etc
            required: true
            schema:
              $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.GetWrappingKeyRequest'
          responses:
            200:
              description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#getWrappingKey}
              schema:
                $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.GetWrappingKeyResponse'
            400:
              description: Error response for ERR_MISSING_PARAM (HTTP 400)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            401:
              description: Error response for ERR_SERVICE_AUTH (HTTP 401)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            404:
              description: Error response for ERR_NO_SERVICE (HTTP 404)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            500:
              description: Error response for ERR_UNCAUGHT_EXCEPTION (HTTP 500)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
        parameters:
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/Authorization'
      /generatePANReference:
        post:
          summary: rpinAuth generatePANReference via POST of JSON or XML
          description: Generate a PAN reference for the given plain PAN, for use in the
            client side PIN block generation.
          operationId: rpin.generatePANReference.json
          consumes:
          - application/json
          - text/xml
          x-scopes:
          - AU.RETAIL.PANREF.READ
          parameters:
          - in: body
            name: request
            description: |-
              Generated web-service request-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#generatePANReference}

              Generate a PAN reference for the given plain PAN, for use in the client side PIN block generation.
            required: true
            schema:
              $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.GeneratePANReferenceRequest'
          responses:
            200:
              description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#generatePANReference}
              schema:
                $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.GeneratePANReferenceResponse'
            400:
              description: Error response for ERR_MISSING_PARAM (HTTP 400)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            401:
              description: Error response for ERR_SERVICE_AUTH (HTTP 401)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            404:
              description: Error response for ERR_NO_SERVICE (HTTP 404)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            500:
              description: Error response for ERR_UNCAUGHT_EXCEPTION (HTTP 500)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
        parameters:
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/Authorization'
      /selectPIN:
        post:
          summary: rpinAuth selectPIN via POST of JSON or XML
          description: "Submit a Set-PIN request for a card via the RemotePIN service.\n\n@param
            clientName\n           Identifies the web service client invoking this method.\n@param
            apiVersion\n\t\t\t\tAPI version.\n@param plainPAN\n           The plain-text
            PAN value (provided by the server).\n@param refPAN\n           The PAN-reference
            value used to generate the PIN block.\n@param encryptedPINBlock\n           The
            encrypted PIN block with validation data that was\n           originally obtained
            by the client side application calling the\n           RemotePIN client SDK.\n@param
            txnInfo\n           The additional transaction detail needed for the SetPIN\n
            \          operation.\n@param logmessages\n           The holder for the service
            call trace messages.\nReturns A {@link SelectPINResult} result to indicate
            success or error in\n        setting the PIN."
          operationId: rpin.selectPIN.json
          consumes:
          - application/json
          - text/xml
          x-scopes:
          - AU.RETAIL.PIN.UPDATE
          parameters:
          - in: body
            name: request
            description: "Generated web-service request-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#selectPIN}\n\nSubmit
              a Set-PIN request for a card via the RemotePIN service.\n\n@param clientName\n
              \          Identifies the web service client invoking this method.\n@param
              apiVersion\n\t\t\t\tAPI version.\n@param plainPAN\n           The plain-text
              PAN value (provided by the server).\n@param refPAN\n           The PAN-reference
              value used to generate the PIN block.\n@param encryptedPINBlock\n           The
              encrypted PIN block with validation data that was\n           originally
              obtained by the client side application calling the\n           RemotePIN
              client SDK.\n@param txnInfo\n           The additional transaction detail
              needed for the SetPIN\n           operation.\n@param logmessages\n           The
              holder for the service call trace messages.\nReturns A {@link SelectPINResult}
              result to indicate success or error in\n        setting the PIN."
            required: true
            schema:
              $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.SelectPINRequest'
          responses:
            200:
              description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#selectPIN}
              schema:
                $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.SelectPINResponse'
            400:
              description: Error response for ERR_MISSING_PARAM (HTTP 400)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            401:
              description: Error response for ERR_SERVICE_AUTH (HTTP 401)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            404:
              description: Error response for ERR_NO_SERVICE (HTTP 404)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            500:
              description: Error response for ERR_UNCAUGHT_EXCEPTION (HTTP 500)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
        parameters:
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/Authorization'
      /verifyPIN:
        post:
          summary: rpinAuth verifyPIN via POST of JSON or XML
          description: "Submit a Verify-PIN request for a card via the RemotePIN service.\n\n@param
            clientName\n           Identifies the web service client invoking this method.\n@param
            apiVersion\n\t\t\t\tAPI version.          \n@param plainPAN\n           The
            plain-text PAN value (provided by the server).\n@param refPAN\n           The
            PAN-reference value used to generate the PIN block.\n@param encryptedPINBlock\n
            \          The encrypted PIN block with validation data that was\n           originally
            obtained by the client side application calling the\n           RemotePIN
            client SDK.\n@param txnInfo\n           The additional transaction detail
            needed for the VerifyPIN\n           operation.\n@param logmessages\n           The
            holder for the service call trace messages.\nReturns A {@link VerifyPINResult}
            result to indicate success or error in\n        verifying the PIN."
          operationId: rpin.verifyPIN.json
          consumes:
          - application/json
          - text/xml
          x-scopes:
          - AU.RETAIL.PIN.READ
          parameters:
          - in: body
            name: request
            description: "Generated web-service request-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#verifyPIN}\n\nSubmit
              a Verify-PIN request for a card via the RemotePIN service.\n\n@param clientName\n
              \          Identifies the web service client invoking this method.\n@param
              apiVersion\n\t\t\t\tAPI version.          \n@param plainPAN\n           The
              plain-text PAN value (provided by the server).\n@param refPAN\n           The
              PAN-reference value used to generate the PIN block.\n@param encryptedPINBlock\n
              \          The encrypted PIN block with validation data that was\n           originally
              obtained by the client side application calling the\n           RemotePIN
              client SDK.\n@param txnInfo\n           The additional transaction detail
              needed for the VerifyPIN\n           operation.\n@param logmessages\n           The
              holder for the service call trace messages.\nReturns A {@link VerifyPINResult}
              result to indicate success or error in\n        verifying the PIN."
            required: true
            schema:
              $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.VerifyPINRequest'
          responses:
            200:
              description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#verifyPIN}
              schema:
                $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.VerifyPINResponse'
            400:
              description: Error response for ERR_MISSING_PARAM (HTTP 400)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            401:
              description: Error response for ERR_SERVICE_AUTH (HTTP 401)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            404:
              description: Error response for ERR_NO_SERVICE (HTTP 404)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            500:
              description: Error response for ERR_UNCAUGHT_EXCEPTION (HTTP 500)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
        parameters:
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/Authorization'
      /changePIN:
        post:
          summary: rpinAuth changePIN via POST of JSON or XML
          description: "Submit a Change-PIN request for a card via the RemotePIN service.\n\n@param
            clientName\n           Identifies the web service client invoking this method.\n@param
            apiVersion\n\t\t\t\tAPI version.     \n@param plainPAN\n           The plain-text
            PAN value (provided by the server).\n@param refPANOld\n           The PAN-reference
            value used to generate the Old-PIN\n           PIN-block.\n@param refPANNew\n
            \          The PAN-reference value used to generate the New-PIN\n           PIN-block.\n@param
            encryptedOldPINBlockOld\n           The encrypted PIN block of the Old PIN
            that was originally\n           obtained by the client side application calling
            the RemotePIN\n           client SDK.\n@param encryptedNewPINBlockNew\n           The
            encrypted PIN block of the New PIN that was originally\n           obtained
            by the client side application calling the RemotePIN\n           client SDK.\n@param
            txnInfo\n           The additional transaction detail needed for the VerifyPIN\n
            \          operation.\n@param logmessages\n           The holder for the service
            call trace messages.\nReturns A {@link ChangePINResult} result to indicate
            success or error in\n        during the change PIN process."
          operationId: rpin.changePIN.json
          consumes:
          - application/json
          - text/xml
          x-scopes:
          - AU.RETAIL.PIN.UPDATE
          parameters:
          - in: body
            name: request
            description: "Generated web-service request-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#changePIN}\n\nSubmit
              a Change-PIN request for a card via the RemotePIN service.\n\n@param clientName\n
              \          Identifies the web service client invoking this method.\n@param
              apiVersion\n\t\t\t\tAPI version.     \n@param plainPAN\n           The plain-text
              PAN value (provided by the server).\n@param refPANOld\n           The PAN-reference
              value used to generate the Old-PIN\n           PIN-block.\n@param refPANNew\n
              \          The PAN-reference value used to generate the New-PIN\n           PIN-block.\n@param
              encryptedOldPINBlockOld\n           The encrypted PIN block of the Old PIN
              that was originally\n           obtained by the client side application
              calling the RemotePIN\n           client SDK.\n@param encryptedNewPINBlockNew\n
              \          The encrypted PIN block of the New PIN that was originally\n
              \          obtained by the client side application calling the RemotePIN\n
              \          client SDK.\n@param txnInfo\n           The additional transaction
              detail needed for the VerifyPIN\n           operation.\n@param logmessages\n
              \          The holder for the service call trace messages.\nReturns A {@link
              ChangePINResult} result to indicate success or error in\n        during
              the change PIN process."
            required: true
            schema:
              $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.ChangePINRequest'
          responses:
            200:
              description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#changePIN}
              schema:
                $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.ChangePINResponse'
            400:
              description: Error response for ERR_MISSING_PARAM (HTTP 400)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            401:
              description: Error response for ERR_SERVICE_AUTH (HTTP 401)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            404:
              description: Error response for ERR_NO_SERVICE (HTTP 404)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
            500:
              description: Error response for ERR_UNCAUGHT_EXCEPTION (HTTP 500)
              schema:
                $ref: '#/definitions/au.com.saltgroup.radius.protocol.ErrorResponse'
        parameters:
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/Authorization'
    definitions:
      au.com.saltgroup.radius.protocol.ErrorResponse:
        type: object
        required:
        - result
        properties:
          method:
            type: string
            description: the name of the invoked service method
            title: Method
          parameter:
            type: string
            description: the name of the method parameter that has the problem.
            title: Parameter
          result:
            description: the service error
            title: Result
            $ref: '#/definitions/au.com.saltgroup.radius.protocol.ServiceError'
          logmessages:
            title: Logmessages
            $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
        title: au.com.saltgroup.radius.protocol.ErrorResponse
        description: |-
          Response to return when an error occurs in identifying or invoking the
          service method.
      au.com.saltgroup.radius.protocol.ServiceError:
        type: object
        required:
        - errorId
        properties:
          errorId:
            type: integer
            format: int32
            description: the error code
            title: Error Id
          errorName:
            type: string
            description: the error name
            title: Error Name
          message:
            type: string
            description: the error message
            title: Message
        title: au.com.saltgroup.radius.protocol.ServiceError
        description: |-
          Result to return when an error occurs in identifying or invoking the service
          method.
      au.com.saltgroup.radius.protocol.MessageList:
        type: object
        required:
        - item
        properties:
          wantLevel:
            type: string
            description: The level below which log records were not added to the list.
            title: Want Level
          item:
            type: array
            description: Log messages generated by the service call.
            title: Items
            items:
              type: string
              description: Log messages generated by the service call.
              title: Items
        title: au.com.saltgroup.radius.protocol.MessageList
      au.com.saltgroup.echidna.rpin.protocol.GetWrappingKeyRequest:
        type: object
        properties:
          respFormat:
            type: string
            description: |-
              The format to use for the web service response packet. Default to the
              same as the request format.
            title: Resp Format
            enum:
            - SOAP
            - XML
            - PROPS
            - JSON
          logLevel:
            type: string
            description: The level of trace logging to use for the call.
            title: Log Level
            default: INFO
          operatorId:
            type: string
            description: |-
              The operator (username) for the session that this call is being performed
              on behalf of, to be recorded in the audit logs.
            title: Operator Id
          apiVersion:
            type: string
            description: API version
            title: Api Version
        title: au.com.saltgroup.echidna.rpin.protocol.GetWrappingKeyRequest
        description: |-
          Generated web-service request-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#getWrappingKey}

          Obtain the wrapping key i.e. RSA public key's modulus and public exponent (hex encoded), SKI, X509 Certificate, etc
      au.com.saltgroup.echidna.rpin.protocol.GetWrappingKeyResponse:
        type: object
        required:
        - result
        properties:
          method:
            type: string
            description: The name of the service method that was called.
            title: Method
            default: getWrappingKey
          result:
            description: The result returned by the service method.
            title: Result
            $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.PublicKeyDetail'
          logmessages:
            description: The set of log messages generated by the service method.
            title: Logmessages
            $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
        title: au.com.saltgroup.echidna.rpin.protocol.GetWrappingKeyResponse
        description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#getWrappingKey}
      au.com.saltgroup.echidna.rpin.protocol.PublicKeyDetail:
        type: object
        required:
        - code
        properties:
          code:
            type: integer
            format: int32
            description: The result or error code - 0 indicates success.
            title: Code
          message:
            type: string
            description: A result message providing additional detail for the result code.
            title: Message
          encodedKey:
            type: string
            description: |-
              The encoded public key value in a format that can be interpretted by the
              client-side Javascript library.
            title: Encoded Key
        title: au.com.saltgroup.echidna.rpin.protocol.PublicKeyDetail
        description: A web service result for the getWrappingKey.
      au.com.saltgroup.echidna.rpin.protocol.GeneratePANReferenceRequest:
        type: object
        required:
        - plainPAN
        properties:
          respFormat:
            type: string
            description: |-
              The format to use for the web service response packet. Default to the
              same as the request format.
            title: Resp Format
            enum:
            - SOAP
            - XML
            - PROPS
            - JSON
          logLevel:
            type: string
            description: The level of trace logging to use for the call.
            title: Log Level
            default: INFO
          operatorId:
            type: string
            description: |-
              The operator (username) for the session that this call is being performed
              on behalf of, to be recorded in the audit logs.
            title: Operator Id
          plainPAN:
            type: string
            description: The plain-text PAN value.
            title: Plain PAN
          txnInfo:
            description: Transaction information
            title: Txn Info
            $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.RPinTxnInfo'
        title: au.com.saltgroup.echidna.rpin.protocol.GeneratePANReferenceRequest
        description: |-
          Generated web-service request-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#generatePANReference}

          Generate a PAN reference for the given plain PAN, for use in the client side PIN block generation.
      au.com.saltgroup.echidna.rpin.protocol.RPinTxnInfo:
        type: object
        properties:
          ID:
            type: string
            description: The transaction ID.
            title: Transaction ID
          USR:
            type: string
            description: The user whose PIN is being set.
            title: User ID
          BSB:
            type: string
            description: The branch that the user belongs to.
            title: Branch BSB
          WSN:
            type: string
            description: The workstation that the operation is being initiated from.
            title: Workstation ID
        title: au.com.saltgroup.echidna.rpin.protocol.RPinTxnInfo
        description: Transaction details to accompany a SetPIN operation.
      au.com.saltgroup.echidna.rpin.protocol.GeneratePANReferenceResponse:
        type: object
        required:
        - result
        properties:
          method:
            type: string
            description: The name of the service method that was called.
            title: Method
            default: generatePANReference
          result:
            description: The result returned by the service method.
            title: Result
            $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.PanReferenceResult'
          logmessages:
            description: The set of log messages generated by the service method.
            title: Logmessages
            $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
        title: au.com.saltgroup.echidna.rpin.protocol.GeneratePANReferenceResponse
        description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#generatePANReference}
      au.com.saltgroup.echidna.rpin.protocol.PanReferenceResult:
        type: object
        required:
        - code
        properties:
          code:
            type: integer
            format: int32
            description: The result or error code - 0 indicates success.
            title: Code
          message:
            type: string
            description: A result message providing additional detail for the result code.
            title: Message
          panRef:
            type: string
            description: The generated PAN reference that can be used by the client-side
              Javascript library.
            title: Pan Ref
        title: au.com.saltgroup.echidna.rpin.protocol.PanReferenceResult
        description: A web service result for the generatePANReference method.
      au.com.saltgroup.echidna.rpin.protocol.SelectPINRequest:
        type: object
        required:
        - encryptedPINBlock
        properties:
          respFormat:
            type: string
            description: |-
              The format to use for the web service response packet. Default to the
              same as the request format.
            title: Resp Format
            enum:
            - SOAP
            - XML
            - PROPS
            - JSON
          logLevel:
            type: string
            description: The level of trace logging to use for the call.
            title: Log Level
            default: INFO
          operatorId:
            type: string
            description: |-
              The operator (username) for the session that this call is being performed
              on behalf of, to be recorded in the audit logs.
            title: Operator Id
          apiVersion:
            type: string
            description: API version
            title: Api Version
          plainPAN:
            type: string
            description: The plain-text PAN value.
            title: Plain PAN
          refPAN:
            type: string
            description: The PAN-reference value used to generate the PIN block.
            title: Ref PAN
          encryptedPINBlock:
            type: string
            description: The encrypted PIN block(base64 encoded) with validation data
              that was originally obtained by the browser calling the encrypt-PIN-block
              service.
            title: Encrypted PINBlock
          txnInfo:
            description: Transaction information
            title: Txn Info
            $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.RPinTxnInfo'
        title: au.com.saltgroup.echidna.rpin.protocol.SelectPINRequest
        description: "Generated web-service request-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#selectPIN}\n\nSubmit
          a Set-PIN request for a card via the RemotePIN service.\n\n@param clientName\n
          \          Identifies the web service client invoking this method.\n@param apiVersion\n\t\t\t\tAPI
          version.\n@param plainPAN\n           The plain-text PAN value (provided by
          the server).\n@param refPAN\n           The PAN-reference value used to generate
          the PIN block.\n@param encryptedPINBlock\n           The encrypted PIN block
          with validation data that was\n           originally obtained by the client
          side application calling the\n           RemotePIN client SDK.\n@param txnInfo\n
          \          The additional transaction detail needed for the SetPIN\n           operation.\n@param
          logmessages\n           The holder for the service call trace messages.\nReturns
          A {@link SelectPINResult} result to indicate success or error in\n        setting
          the PIN."
      au.com.saltgroup.echidna.rpin.protocol.SelectPINResponse:
        type: object
        required:
        - result
        properties:
          method:
            type: string
            description: The name of the service method that was called.
            title: Method
            default: selectPIN
          result:
            description: The result returned by the service method.
            title: Result
            $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.SelectPINResult'
          logmessages:
            description: The set of log messages generated by the service method.
            title: Logmessages
            $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
        title: au.com.saltgroup.echidna.rpin.protocol.SelectPINResponse
        description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#selectPIN}
      au.com.saltgroup.echidna.rpin.protocol.SelectPINResult:
        type: object
        required:
        - code
        properties:
          code:
            type: integer
            format: int32
            description: The result or error code - 0 indicates success.
            title: Code
          message:
            type: string
            description: A result message providing additional detail for the result code.
            title: Message
        title: au.com.saltgroup.echidna.rpin.protocol.SelectPINResult
        description: |-
          The result of invoking
          {@link au.com.saltgroup.echidna.rpin.serv.RemotePINService#selectPIN}.
      au.com.saltgroup.echidna.rpin.protocol.VerifyPINRequest:
        type: object
        required:
        - encryptedPINBlock
        properties:
          respFormat:
            type: string
            description: |-
              The format to use for the web service response packet. Default to the
              same as the request format.
            title: Resp Format
            enum:
            - SOAP
            - XML
            - PROPS
            - JSON
          logLevel:
            type: string
            description: The level of trace logging to use for the call.
            title: Log Level
            default: INFO
          operatorId:
            type: string
            description: |-
              The operator (username) for the session that this call is being performed
              on behalf of, to be recorded in the audit logs.
            title: Operator Id
          apiVersion:
            type: string
            description: API version
            title: Api Version
          plainPAN:
            type: string
            description: The plain-text PAN value.
            title: Plain PAN
          refPAN:
            type: string
            description: The PAN-reference value used to generate the PIN block.
            title: Ref PAN
          encryptedPINBlock:
            type: string
            description: The encrypted PIN block with validation data that was originally
              obtained by the client.
            title: Encrypted PINBlock
          txnInfo:
            description: Transaction information
            title: Txn Info
            $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.RPinTxnInfo'
        title: au.com.saltgroup.echidna.rpin.protocol.VerifyPINRequest
        description: "Generated web-service request-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#verifyPIN}\n\nSubmit
          a Verify-PIN request for a card via the RemotePIN service.\n\n@param clientName\n
          \          Identifies the web service client invoking this method.\n@param apiVersion\n\t\t\t\tAPI
          version.          \n@param plainPAN\n           The plain-text PAN value (provided
          by the server).\n@param refPAN\n           The PAN-reference value used to generate
          the PIN block.\n@param encryptedPINBlock\n           The encrypted PIN block
          with validation data that was\n           originally obtained by the client
          side application calling the\n           RemotePIN client SDK.\n@param txnInfo\n
          \          The additional transaction detail needed for the VerifyPIN\n           operation.\n@param
          logmessages\n           The holder for the service call trace messages.\nReturns
          A {@link VerifyPINResult} result to indicate success or error in\n        verifying
          the PIN."
      au.com.saltgroup.echidna.rpin.protocol.VerifyPINResponse:
        type: object
        required:
        - result
        properties:
          method:
            type: string
            description: The name of the service method that was called.
            title: Method
            default: verifyPIN
          result:
            description: The result returned by the service method.
            title: Result
            $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.VerifyPINResult'
          logmessages:
            description: The set of log messages generated by the service method.
            title: Logmessages
            $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
        title: au.com.saltgroup.echidna.rpin.protocol.VerifyPINResponse
        description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#verifyPIN}
      au.com.saltgroup.echidna.rpin.protocol.VerifyPINResult:
        type: object
        required:
        - code
        properties:
          code:
            type: integer
            format: int32
            description: The result or error code - 0 indicates success.
            title: Code
          message:
            type: string
            description: A result message providing additional detail for the result code.
            title: Message
        title: au.com.saltgroup.echidna.rpin.protocol.VerifyPINResult
        description: |-
          The result of invoking
          {@link au.com.saltgroup.echidna.rpin.serv.RemotePINService#verifyPIN}.
      au.com.saltgroup.echidna.rpin.protocol.ChangePINRequest:
        type: object
        required:
        - encryptedNewPINBlock
        - encryptedOldPINBlock
        properties:
          respFormat:
            type: string
            description: |-
              The format to use for the web service response packet. Default to the
              same as the request format.
            title: Resp Format
            enum:
            - SOAP
            - XML
            - PROPS
            - JSON
          logLevel:
            type: string
            description: The level of trace logging to use for the call.
            title: Log Level
            default: INFO
          operatorId:
            type: string
            description: |-
              The operator (username) for the session that this call is being performed
              on behalf of, to be recorded in the audit logs.
            title: Operator Id
          apiVersion:
            type: string
            description: API version
            title: Api Version
          plainPAN:
            type: string
            description: The plain-text PAN value.
            title: Plain PAN
          refPANOld:
            type: string
            description: The PAN-reference value used to generate the Old-PIN PIN-block.
            title: Ref PANOld
          refPANNew:
            type: string
            description: The PAN-reference value used to generate the New-PIN PIN-block.
            title: Ref PANNew
          encryptedOldPINBlock:
            type: string
            description: The encrypted PIN block of the Old PIN that was originally obtained
              by the client.
            title: Encrypted Old PINBlock
          encryptedNewPINBlock:
            type: string
            description: The encrypted PIN block of the New PIN that was originally obtained
              by the client.
            title: Encrypted New PINBlock
          txnInfo:
            description: Transaction information
            title: Txn Info
            $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.RPinTxnInfo'
        title: au.com.saltgroup.echidna.rpin.protocol.ChangePINRequest
        description: "Generated web-service request-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#changePIN}\n\nSubmit
          a Change-PIN request for a card via the RemotePIN service.\n\n@param clientName\n
          \          Identifies the web service client invoking this method.\n@param apiVersion\n\t\t\t\tAPI
          version.     \n@param plainPAN\n           The plain-text PAN value (provided
          by the server).\n@param refPANOld\n           The PAN-reference value used to
          generate the Old-PIN\n           PIN-block.\n@param refPANNew\n           The
          PAN-reference value used to generate the New-PIN\n           PIN-block.\n@param
          encryptedOldPINBlockOld\n           The encrypted PIN block of the Old PIN that
          was originally\n           obtained by the client side application calling the
          RemotePIN\n           client SDK.\n@param encryptedNewPINBlockNew\n           The
          encrypted PIN block of the New PIN that was originally\n           obtained
          by the client side application calling the RemotePIN\n           client SDK.\n@param
          txnInfo\n           The additional transaction detail needed for the VerifyPIN\n
          \          operation.\n@param logmessages\n           The holder for the service
          call trace messages.\nReturns A {@link ChangePINResult} result to indicate success
          or error in\n        during the change PIN process."
      au.com.saltgroup.echidna.rpin.protocol.ChangePINResponse:
        type: object
        required:
        - result
        properties:
          method:
            type: string
            description: The name of the service method that was called.
            title: Method
            default: changePIN
          result:
            description: The result returned by the service method.
            title: Result
            $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.ChangePINResult'
          logmessages:
            description: The set of log messages generated by the service method.
            title: Logmessages
            $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
        title: au.com.saltgroup.echidna.rpin.protocol.ChangePINResponse
        description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#changePIN}
      au.com.saltgroup.echidna.rpin.protocol.ChangePINResult:
        type: object
        required:
        - code
        properties:
          code:
            type: integer
            format: int32
            description: The result or error code - 0 indicates success.
            title: Code
          message:
            type: string
            description: A result message providing additional detail for the result code.
            title: Message
        title: au.com.saltgroup.echidna.rpin.protocol.ChangePINResult
        description: |-
          The result of invoking
          {@link au.com.saltgroup.echidna.rpin.serv.RemotePINService#changePIN}.
    parameters:
      result:
        in: body
        name: result
        required: false
        schema:
          type: object
          required:
          - code
          properties:
            code:
              type: integer
              format: int32
              description: The result or error code - 0 indicates success.
              title: Code
            message:
              type: string
              description: A result message providing additional detail for the result
                code.
              title: Message
          title: au.com.saltgroup.echidna.rpin.protocol.ChangePINResult
          description: |-
            The result of invoking
            {@link au.com.saltgroup.echidna.rpin.serv.RemotePINService#changePIN}.
      logmessages:
        in: body
        name: logmessages
        required: false
        schema:
          type: object
          required:
          - item
          properties:
            wantLevel:
              type: string
              description: The level below which log records were not added to the list.
              title: Want Level
            item:
              type: array
              description: Log messages generated by the service call.
              title: Items
              items:
                type: string
                description: Log messages generated by the service call.
                title: Items
          title: au.com.saltgroup.radius.protocol.MessageList
      errResp:
        in: body
        name: errResp
        required: false
        schema:
          type: object
          required:
          - result
          properties:
            method:
              type: string
              description: the name of the invoked service method
              title: Method
            parameter:
              type: string
              description: the name of the method parameter that has the problem.
              title: Parameter
            result:
              description: the service error
              title: Result
              $ref: '#/definitions/au.com.saltgroup.radius.protocol.ServiceError'
            logmessages:
              title: Logmessages
              $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
          title: au.com.saltgroup.radius.protocol.ErrorResponse
          description: |-
            Response to return when an error occurs in identifying or invoking the
            service method.
      au.com.saltgroup.echidna.rpin.protocol.GetWrappingKeyResponse:
        in: body
        name: au.com.saltgroup.echidna.rpin.protocol.GetWrappingKeyResponse
        required: false
        schema:
          type: object
          required:
          - result
          properties:
            method:
              type: string
              description: The name of the service method that was called.
              title: Method
              default: getWrappingKey
            result:
              description: The result returned by the service method.
              title: Result
              $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.PublicKeyDetail'
            logmessages:
              description: The set of log messages generated by the service method.
              title: Logmessages
              $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
          title: au.com.saltgroup.echidna.rpin.protocol.GetWrappingKeyResponse
          description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#getWrappingKey}
      txnInfo:
        in: body
        name: txnInfo
        required: false
        schema:
          type: object
          properties:
            ID:
              type: string
              description: The transaction ID.
              title: Transaction ID
            USR:
              type: string
              description: The user whose PIN is being set.
              title: User ID
            BSB:
              type: string
              description: The branch that the user belongs to.
              title: Branch BSB
            WSN:
              type: string
              description: The workstation that the operation is being initiated from.
              title: Workstation ID
          title: au.com.saltgroup.echidna.rpin.protocol.RPinTxnInfo
          description: Transaction details to accompany a SetPIN operation.
      au.com.saltgroup.echidna.rpin.protocol.GeneratePANReferenceResponse:
        in: body
        name: au.com.saltgroup.echidna.rpin.protocol.GeneratePANReferenceResponse
        required: false
        schema:
          type: object
          required:
          - result
          properties:
            method:
              type: string
              description: The name of the service method that was called.
              title: Method
              default: generatePANReference
            result:
              description: The result returned by the service method.
              title: Result
              $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.PanReferenceResult'
            logmessages:
              description: The set of log messages generated by the service method.
              title: Logmessages
              $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
          title: au.com.saltgroup.echidna.rpin.protocol.GeneratePANReferenceResponse
          description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#generatePANReference}
      au.com.saltgroup.echidna.rpin.protocol.SelectPINResponse:
        in: body
        name: au.com.saltgroup.echidna.rpin.protocol.SelectPINResponse
        required: false
        schema:
          type: object
          required:
          - result
          properties:
            method:
              type: string
              description: The name of the service method that was called.
              title: Method
              default: selectPIN
            result:
              description: The result returned by the service method.
              title: Result
              $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.SelectPINResult'
            logmessages:
              description: The set of log messages generated by the service method.
              title: Logmessages
              $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
          title: au.com.saltgroup.echidna.rpin.protocol.SelectPINResponse
          description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#selectPIN}
      au.com.saltgroup.echidna.rpin.protocol.VerifyPINResponse:
        in: body
        name: au.com.saltgroup.echidna.rpin.protocol.VerifyPINResponse
        required: false
        schema:
          type: object
          required:
          - result
          properties:
            method:
              type: string
              description: The name of the service method that was called.
              title: Method
              default: verifyPIN
            result:
              description: The result returned by the service method.
              title: Result
              $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.VerifyPINResult'
            logmessages:
              description: The set of log messages generated by the service method.
              title: Logmessages
              $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
          title: au.com.saltgroup.echidna.rpin.protocol.VerifyPINResponse
          description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#verifyPIN}
      au.com.saltgroup.echidna.rpin.protocol.ChangePINResponse:
        in: body
        name: au.com.saltgroup.echidna.rpin.protocol.ChangePINResponse
        required: false
        schema:
          type: object
          required:
          - result
          properties:
            method:
              type: string
              description: The name of the service method that was called.
              title: Method
              default: changePIN
            result:
              description: The result returned by the service method.
              title: Result
              $ref: '#/definitions/au.com.saltgroup.echidna.rpin.protocol.ChangePINResult'
            logmessages:
              description: The set of log messages generated by the service method.
              title: Logmessages
              $ref: '#/definitions/au.com.saltgroup.radius.protocol.MessageList'
          title: au.com.saltgroup.echidna.rpin.protocol.ChangePINResponse
          description: Generated web-service response-packet class for {@link au.com.saltgroup.echidna.rpin.serv.RemotePINWebService#changePIN}
      X-B3-TraceId:
        x-example: 89b7fe72db29f5e6225ba02770da98d6
        description: A 128 bit length (lower hex) unique identifier for the trace. This
          is only generated when the first request is made. Every span in a trace shares
          this ID.
        in: header
        required: true
        type: string
        name: X-B3-TraceId
      X-B3-SpanId:
        x-example: efcf4dd20496ee2e69cad1250e68545c
        description: A 128 bit length (lower hex) unique ID of the service processing
          the request.
        in: header
        required: true
        type: string
        name: X-B3-SpanId
      X-B3-ParentSpanId:
        x-example: 3837dc3ba8fb342d70abf6454f27390d
        description: The ID of the originator of the request. This will generally be the
          same as the Trace ID for the first instance. A span without this ID is considered
          the root of the trace.
        in: header
        required: false
        type: string
        name: X-B3-ParentSpanId
      Authorization:
        x-example: Bearer <REPLACE_WITH_JWT>
        description: JWT in Bearer schema (Bearer <JWT-String>)
        in: header
        required: true
        type: string
        name: Authorization
    x-ibm-endpoints:
    - endpointUrl: https://api.corp.dev.anz
      description: Custom Gateway API Endpoint
      type:
      - production
      - development
    ...

---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: anz.ocv.retrieveparty
  description: "OCV Retrieve Party API includes operations to retrieve party based on Identifier or Source System. accounts attributes also available in this version"
  links:
    - url: https://sandpit.developer.dev.anz/eapicorp01/sandpit/ibm_apim/swaggerjson/b2N2LXJldHJpZXZlLXBhcnR5LWFwaToxLjQuMA%2C%2C
      title: Spec
      icon: dashboard
spec:
  type: openapi
  lifecycle: production
  definition: |
    ---
    info:
      x-ibm-name: ocv-retrieve-party-api
      title: OCV Retrieve Party API
      version: 1.4.0
      description: OCV Retrieve Party API includes operations to retrieve party based
        on Identifier or Source System. accounts attributes also available in this version
      contact:
        name: ANZ EAPI
        email: eapi@anz.com
      x-api-ownership:
        technology-owner:
          name: Paul Hassan
          role: Release Lead Chapter Lead
          email: Paul.Hassan@anz.com
        business-owner:
          name: Abhishek Kumar Bubna
          role: Product Owner Chapter Lead
          email: AbhishekKumar.Bubna2@anz.com
      x-information-security:
        confidentiality-rating: Internal
        integrity-rating: Trusted
    schemes:
    - https
    basePath: /ocv/ocv-retrieve-party-api
    swagger: "2.0"
    x-ibm-configuration:
      enforced: true
      phase: realized
      testable: true
      categories:
      - LOB/Customer
      - Phase/SIT Ready
    paths:
      /parties/retrieve:
        parameters:
        - $ref: '#/parameters/channel'
        - $ref: '#/parameters/userid'
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        post:
          tags:
          - parties
          summary: Retrieve parties in OCV
          description: Capability for channels (e.g. ANZx, MMLO etc.) to directly retrieve
            party data in OCV
          produces:
          - application/json
          consumes:
          - application/json
          parameters:
          - name: RetrievePartyRq
            in: body
            description: Retrieve Party payload
            schema:
              $ref: '#/definitions/RetrievePartyRq'
          - name: relationshipsRequired
            in: query
            type: boolean
            description: Boolean value. It can be true of false. If not provided, it is
              considered false.
            required: false
          - name: versionRequired
            in: query
            type: boolean
            description: Boolean value. It can be true of false. If not provided, it is
              considered false.
            required: false
          - name: relationshipType
            in: query
            type: string
            enum:
            - CLG
            description: This parameter is required to filter the relationship types.
              by defaults all relationship types will be returned
            required: false
          - name: includeAccounts
            type: boolean
            required: false
            in: query
            x-example: "true"
            description: Set this to true if accounts need to be fetched. Default value
              is false
          - name: accountRelationTypes
            type: string
            required: false
            in: query
            x-example: SOL,CLG
            description: This parameter is applicable if the parameter includeAccounts
              is true. If provided, accounts with only these relationship types will be
              returned
          - name: offset
            type: integer
            required: false
            in: query
            x-example: 1
            description: This parameter is applicable if the parameter includeAccounts
              is true. Assists in pagination together with limit. Defaults to 1
          - name: historicalFields
            type: string
            required: false
            in: query
            x-example: ocvId
            description: This parameter is required to get the historical details of a
              field. At the moment only provides history details for ocvId
          - name: additionalAttributesRequired
            in: query
            type: boolean
            description: Boolean value. It can be true of false. If not provided, it is
              considered false.
            required: false
          - name: rolesRequired
            in: query
            type: boolean
            description: Boolean value. It can be true of false. If not provided, it is
              considered false.
            required: false
          responses:
            200:
              description: successful operation
              schema:
                $ref: '#/definitions/RetrievePartyRsList'
            400:
              description: Invalid Input
              schema:
                $ref: '#/definitions/ErrorResponse'
            403:
              description: Forbidden
              schema:
                $ref: '#/definitions/ErrorResponse'
            404:
              description: Not found
              schema:
                $ref: '#/definitions/ErrorResponse'
            500:
              description: Internal Server Error
              schema:
                $ref: '#/definitions/ErrorResponse'
            default:
              description: Unexpected error
              schema:
                $ref: '#/definitions/ErrorResponse'
          x-scopes:
          - AU.ANZ_INTERNAL.OCV.MMLO.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.PTY.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.APPLY.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.CUSTOMERHUB.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.PIC.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.OB.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.PEGA.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.COMMBROKER.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.CAP.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.ELS.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.SIEBEL.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.ANZX.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.ANZC.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.PNDE.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.HKF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.CNF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.INF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.JPF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.MMF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.PGF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.PHF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.SGF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.KRF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.TWF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.VNF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.THF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.AUF.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.CN.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.HK.ACCESS.READ
          - AU.ANZ_INTERNAL.OCV.ARC.ACCESS.READ
    definitions:
      ErrorResponse:
        type: object
        required:
        - httpCode
        - httpMessage
        properties:
          httpCode:
            type: string
            description: HTTP Status Code
            example: "400"
          httpMessage:
            type: string
            description: HTTP Reason Phrase
            example: Bad Request
          type:
            type: string
            description: Provider Error or Validation Error
            example: ProviderError
          moreInformation:
            type: string
            description: Additional error information
            example: Invalid Customer
          errors:
            type: array
            items:
              type: object
              description: Detailed error object list
              properties:
                statusCode:
                  type: string
                  description: System error code
                  example: "4001"
                statusMessage:
                  type: string
                  description: System error message
                  example: Missing mandatory headers
                moreInformation:
                  type: string
                  description: System error description
                  example: Invalid address type
                location:
                  type: string
                  description: SystemLocation of error
                  example: OCV
      RetrievePartyRsList:
        type: array
        items:
          $ref: '#/definitions/RetrievePartyRs'
      RetrievePartyRs:
        type: object
        properties:
          partyType:
            type: string
            enum:
            - P
            - O
            example: P
            description: P / O i.e., Person / Organisation
          ocvId:
            type: string
            description: A 10 digit number to identify a party
            example: 3000074658
          partyVersion:
            type: string
            description: Party version in OCV
            example: 2
          dateOfBirth:
            type: string
            description: Only for Individual party type
            format: date
            example: "1985-12-22"
          organisationType:
            type: string
            description: 'Applicable for Organisation party type only. populates with
              APS910 Organisation types. e.g: A, B, C, D, CG etc'
            example: CG
          organisationTypeRaw:
            type: string
            description: 'Applicable for Organisation party type only. Populates with
              the value reveived from source. e.g: 03, 04, 09 etc'
            example: "04"
          establishmentDate:
            type: string
            description: Only for Organisation party type
            format: date
            example: "2013-12-20"
          source:
            type: string
            example: CAP-CIS
          status:
            type: string
            example: active
          selfCertTaxFlag:
            type: string
            description: Flag to capture self-certified Tax Residency
            example: AFT
          selfCertTaxDate:
            type: string
            description: Self Certified Tax date
            example: "2016-02-12"
          kycDetails:
            type: object
            properties:
              status:
                type: string
                description: KYC status for the party
                example: CO
              verificationLevel:
                type: string
                description: KYC verification level for the party
                example: VE
          anzsicDetails:
            type: array
            items:
              $ref: '#/definitions/AnzsicDetail'
          industry:
            type: object
            description: Applicable only for Organisation partyType
            properties:
              code:
                type: string
                description: Industry code
                example: "1234"
              description:
                type: string
                description: Description OF the Industry
                example: Education
          bankruptDate:
            type: string
            description: Bankrupt date OF the party
            format: date
            example: "2013-12-21"
          decesasedDate:
            type: string
            description: 'Deceased date of the party and Applicable for only Individuals. '
            format: date
            example: "1988-11-23"
          gender:
            type: string
            description: 'Gender: Only for Individual party type'
            enum:
            - M
            - F
            example: F
          maritalStatus:
            type: string
            description: Marital Status for the individual party
            example: Single
          employeeIndicator:
            type: string
            description: Employee Indicator for the individual party
            enum:
            - "Y"
            - "N"
            example: "Y"
          employerName:
            type: string
            description: Employer for the individual party
            example: ANZ Banking Group
          cpId:
            type: string
            description: CPID name of the party
            example: R5261
          sourceEstablishedDate:
            type: string
            description: Onboarding date in source
            format: date
            example: "1979-12-22"
          occupation:
            type: object
            properties:
              code:
                type: string
                description: Occupation code
                example: "99910"
              description:
                type: string
                description: Description for the Occupation code and only applicable for
                  Individuals. Not mapped yet.
                example: Student
              sourceOccupationCode:
                type: string
                description: Raw value of occupation from source system.
                example: "0016"
          addresses:
            type: array
            items:
              $ref: '#/definitions/Address'
          phones:
            type: array
            items:
              $ref: '#/definitions/Phone'
          faxes:
            type: array
            items:
              $ref: '#/definitions/Fax'
          emails:
            type: array
            items:
              $ref: '#/definitions/Email'
          identifiers:
            type: array
            items:
              $ref: '#/definitions/Identifier'
          names:
            type: array
            description: Mandatory for Person and Organisations
            items:
              $ref: '#/definitions/Name'
          preferences:
            type: array
            items:
              $ref: '#/definitions/PrivacyPreference'
          commercialContacts:
            type: array
            items:
              $ref: '#/definitions/CommercialContacts'
          sourceSystems:
            type: array
            items:
              $ref: '#/definitions/SourceSystem'
          jurisdictionDetails:
            type: array
            items:
              $ref: '#/definitions/jurisdictionDetail'
          bankingServices:
            type: array
            items:
              $ref: '#/definitions/BankingServices'
          bankingRelationships:
            type: array
            items:
              $ref: '#/definitions/BankingRelationships'
          relationships:
            type: array
            items:
              $ref: '#/definitions/Relationship'
          accounts:
            type: array
            items:
              $ref: '#/definitions/Account'
          links:
            type: array
            items:
              $ref: '#/definitions/Link'
          historicDetails:
            type: object
            properties:
              identifiers:
                type: array
                items:
                  $ref: '#/definitions/IdentifierHistorical'
          kycVerifications:
            type: array
            items:
              $ref: '#/definitions/KYCVerification'
          partyMacroRoles:
            type: array
            items:
              $ref: '#/definitions/PartyMacroRole'
          alerts:
            type: array
            items:
              $ref: '#/definitions/Alert'
          consents:
            type: array
            items:
              $ref: '#/definitions/Consent'
          atomicAttributes:
            type: array
            items:
              $ref: '#/definitions/AtomicAttribute'
      RetrievePartyRq:
        type: object
        properties:
          identifiers:
            type: array
            description: Retrieve using identifiers. While doing identifier retrieve sourceSystems
              should not be provided.
            minItems: 0
            maxItems: 1
            items:
              $ref: '#/definitions/IdentifierRq'
          sourceSystems:
            type: array
            description: Retrieve using sourceSystems. While doing sourceSystems retrieve
              identifiers should not be provided.
            minItems: 0
            maxItems: 1
            items:
              $ref: '#/definitions/SourceSystemRq'
      SourceSystem:
        type: object
        required:
        - sourceSystemId
        - sourceSystemName
        properties:
          sourceSystemId:
            type: string
            description: ID of Source System
            example: "1212201901"
          sourceSystemName:
            type: string
            description: Source System Name
            example: CAP-CIS
      SourceSystemRq:
        type: object
        required:
        - sourceSystemId
        - sourceSystemName
        properties:
          sourceSystemId:
            type: string
            description: ID of Source System
            example: "1212201901"
          sourceSystemName:
            type: string
            description: Source System Name
            example: CAP-CIS
      CommercialContacts:
        type: object
        properties:
          name:
            type: string
            description: Name of the contact
            example: FIONA CAMPBELL
          title:
            type: string
            description: Title
            example: MANAGER
          phone:
            type: string
            description: Phone number for Contact
            example: 0401234568
          fax:
            type: string
            description: Fax Details
            example: 03865555
          mobile:
            type: string
            description: Mobile Number
            example: "0401234567"
          preferred:
            type: string
            description: Preferred Contacts Method
            enum:
            - "Y"
            - "N"
            example: "Y"
      PrivacyPreference:
        type: object
        properties:
          preferenceType:
            type: string
            description: Preference
            example: Primary Preferred Contact Day and Time
          preferenceValue:
            type: string
            description: Preference Value
            example: "Y"
          preferenceReason:
            type: string
            description: Preference Reason
            example: Allowed
          source:
            type: string
            description: Source System Name
            enum:
            - CAP-CIS
            - SIEBEL
            example: CAP-CIS
      Name:
        type: object
        properties:
          nameUsageType:
            type: string
            description: Name Usage Type
            example: Legal Name
          name:
            type: string
            description: Name of Party and applicable only for Organisation party type
            example: ABC Pvt Ltd
          prefix:
            type: string
            description: Prefix
            example: Dr
          title:
            type: string
            description: Title of Party
            example: Mr
          firstName:
            type: string
            description: First Name of Party
            example: MARY
          middleName:
            type: string
            description: Middle Name of Party
            example: JOHN
          lastName:
            type: string
            description: Last Name of Party
            example: NAPOLI
          suffix:
            type: string
            description: Suffix Used with Name
            example: JR.
          source:
            type: string
            description: Source System Name
            enum:
            - CAP-CIS
            - SIEBEL
            example: CAP-CIS
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2001-01-01"
          endDate:
            type: string
            description: End Date
            format: date
            example: ""
      Identifier:
        type: object
        properties:
          identifierUsageType:
            type: string
            description: Identifier Usage Type
            example: ABN
          identifier:
            type: string
            description: Identifier
            example: "12345679801"
          identificationIssueLocation:
            type: string
            description: Identifier Location
            example: Australia
          source:
            type: string
            description: Source System Name
            example: CAP-CIS
          expiryDate:
            type: string
            description: Expiry Date
            format: date
            example: "2020-05-14"
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2019-05-14"
          endDate:
            type: string
            description: End Date
            format: date
            example: ""
          status:
            type: string
            description: Identifier status
            example: Active
          identificationCountry:
            type: string
            description: Country of Identification
            example: Australia
          identificationState:
            type: string
            description: State Related to the form of identification
            example: VIC
          documentReference:
            type: array
            items:
              $ref: '#/definitions/DocumentReference'
          atomicAttributes:
            type: array
            items:
              $ref: '#/definitions/AtomicAttribute'
          structuredAttributes:
            type: array
            items:
              $ref: '#/definitions/StrucAttribute'
          sequence:
            type: string
            description: Seqence Number
            example: "1"
      IdentifierRq:
        type: object
        required:
        - identifierUsageType
        - identifier
        properties:
          identifierUsageType:
            type: string
            description: Identifier Usage Type
            example: ABN
          identifier:
            type: string
            description: Identifier
            example: "12345679801"
      Email:
        type: object
        properties:
          emailUsageType:
            type: string
            description: Email Usage Type
            example: Email
          email:
            type: string
            description: Email Address
            example: abc@anz.com
          preferred:
            type: string
            description: Preferred Email Address
            enum:
            - "Y"
            - "N"
            example: "Y"
          source:
            type: string
            description: Source System Name
            example: CAP-CIS
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2019-01-01"
          endDate:
            type: string
            description: End Date
            format: date
            example: "2019-12-01"
          sequence:
            type: string
            description: Seqence Number
            example: "1"
      Phone:
        type: object
        properties:
          phoneUsageType:
            type: string
            description: Phone Usage Type
            example: Primary Business Telephone
          phone:
            type: string
            description: Phone Number
            example: 0412345678
          preferred:
            type: string
            description: Preferred Phone Usage Type
            enum:
            - "Y"
            - "N"
            example: "Y"
          source:
            type: string
            description: Source System Name
            example: CAP-CIS
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2019-01-01"
          endDate:
            type: string
            description: End Date
            format: date
            example: "2019-12-02"
          sequence:
            type: string
            description: Seqence Number
            example: "1"
      Fax:
        type: object
        properties:
          faxUsageType:
            type: string
            description: Fax Usage Type
            example: Fax Home
          fax:
            type: string
            description: Fax Number
            example: 0412345678
          preferred:
            type: string
            description: Preferred Phone Usage Type
            enum:
            - "Y"
            - "N"
            example: "Y"
          source:
            type: string
            description: Source System Name
            example: CAP-CIS
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2019-01-01"
          endDate:
            type: string
            description: End Date
            format: date
            example: "2019-12-01"
          sequence:
            type: string
            description: Seqence Number
            example: "1"
      Address:
        type: object
        required:
        - addressLineOne
        - country
        properties:
          addressUsageType:
            type: string
            description: Address Usage Type
            example: Primary Residential
          addressLineOne:
            type: string
            description: Address line one
            example: 56-L
          addressLineTwo:
            type: string
            description: Address line two
            example: Near Dev Park
          addressLineThree:
            type: string
            description: Address line three
            example: Model Town
          addressLineFour:
            type: string
            description: Address line Four
            example: Model Town
          addressLineFive:
            type: string
            description: Address line Five
            example: Model Town
          addressLineSix:
            type: string
            description: Address line Six
            example: Model Town
          city:
            type: string
            description: City Name
            example: Melbourne
          postalCode:
            type: string
            description: Postal Code
            example: "3168"
          residenceNumber:
            type: string
            description: Unit No/Level No
            example: Unit 1809
          residenceType:
            type: string
            description: residence Type
            example: Apartment
          buildingName:
            type: string
            description: Building Name
            example: 'Victor selvia '
          streetNumber:
            type: string
            description: Street Number
            example: 173 City Road
          streetPrefix:
            type: string
            description: Street Prefix
            example: Road
          streetName:
            type: string
            description: Street Name
            example: City Road
          streetSuffix:
            type: string
            description: Street Suffix
            example: Saint
          countyCode:
            type: string
            description: County Code
            example: "035"
          latitudeDegrees:
            type: string
            description: degree of latitude
            example: "176"
          longitudeDegrees:
            type: string
            description: degree of longitude
            example: "24"
          postalBarCode:
            type: string
            description: postal Bar Code
            example: "62626"
          preDirectional:
            type: string
            description: directional information for delivery
            example: North Bay Street
          postDirectional:
            type: string
            description: directional information for delivery
            example: Bay Drive West
          boxDesignator:
            type: string
            description: Box Designator
            example: SouthCity
          boxId:
            type: string
            description: Box ID
            example: "8392"
          stnInfo:
            type: string
            description: stn information
            example: SouthBank
          stnId:
            type: string
            description: stn ID
            example: "2627"
          delDesignator:
            type: string
            description: Postal Delivery Type
            example: GPO BOX
          delInfo:
            type: string
            description: Postal Delivery Number
            example: 19 in PO BOX 19
          country:
            type: string
            description: Country Name
            example: AUS
          state:
            type: string
            description: OCV Standardised value
            example: AU-VI
          region:
            type: string
            description: RAW state value
            example: VIC
          deliveryId:
            type: string
            description: Delivery ID
            example: "34438539"
          source:
            type: string
            description: Source System Name
            example: CAP-CIS
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2001-01-01"
          endDate:
            type: string
            description: End Date
            format: date
            example: "2019-05-20"
          level:
            type: string
            description: The type of level e.g. Ground Floor, Basement, Mezzanine, etc",
            example: Ground Floor
          levelNumber:
            type: string
            description: The level number e.g. 1, 1a, 2, 3 …
            example: "10"
          sa1Type:
            type: string
            description: Statistical Areas Level 1 (SA1)
            example: SA1
          validationDetails:
            type: array
            items:
              $ref: '#/definitions/ValidationDetails'
          verificationDetails:
            type: array
            items:
              $ref: '#/definitions/VerificationDetails'
      jurisdictionDetail:
        type: object
        properties:
          jurisdictionName:
            type: string
            description: Jurisdiction associated with Party
            example: AU
      BankingServices:
        type: object
        required:
        - bankingServicesValue
        properties:
          bankingServicesValue:
            type: string
            description: bankingServices associated with Party
            example: ARS
      BankingRelationships:
        type: object
        required:
        - bankingRelationshipsValue
        properties:
          bankingRelationshipsValue:
            type: string
            description: BankingRelationships associated with Party
            example: AAW
      Relationship:
        type: object
        properties:
          relationshipType:
            type: string
            enum:
            - Customer Lending Group
            - Director
            - Managing Director
            - Partner
            - Secretary
            - Chairman
            - Treasurer
            - SUB AGGREGATOR TO
            - AGGREGATOR
            example: Customer Lending Group
            description: Describes the type of Relationship
          partyType:
            type: string
            enum:
            - P
            - O
            example: P
            description: P / O i.e., Person / Organisation
          ocvId:
            type: number
            description: A 10 digit number to identify a party
            example: 3000074656
          organisationType:
            type: string
            description: 'Applicable for Organisation party type only. populates with
              APS910 Organisation types. e.g: A, B, C, D, CG etc'
            example: CG
          organisationTypeRaw:
            type: string
            description: 'Applicable for Organisation party type only. Populates with
              the value reveived from source. e.g: 03, 04, 09 etc'
            example: "04"
          status:
            type: string
            example: active
          dateOfBirth:
            type: string
            description: Only for Individual party type
            format: date
            example: "1983-12-21"
          source:
            type: string
            example: CAP-CIS
          establishmentDate:
            type: string
            description: Only for Organisation party type
            format: date
            example: "2013-12-21"
          cpId:
            type: string
            description: CPID name of the party
            example: R5261
          bankruptDate:
            type: string
            description: Bankrupt date OF the party
            format: date
            example: "2013-12-21"
          decesasedDate:
            type: string
            description: 'Deceased date of the party and Applicable for only Individuals. '
            format: date
            example: "1988-11-23"
          gender:
            type: string
            description: 'Gender: Only for Individual party type'
            enum:
            - M
            - F
            example: F
          maritalStatus:
            type: string
            description: Marital Status for the individual related party
            example: Single
          employeeIndicator:
            type: string
            description: Employee Indicator for the individual related party
            enum:
            - "Y"
            - "N"
            example: "Y"
          employerName:
            type: string
            description: Employer for the individual related party
            example: ANZ Banking Group
          sourceEstablishedDate:
            type: string
            description: Onboarding date in source
            format: date
            example: "1979-12-21"
          kycDetails:
            type: object
            properties:
              status:
                type: string
                description: KYC status for the party
                example: CO
              verificationLevel:
                type: string
                description: KYC verification level for the party
                example: VE
          industry:
            type: object
            description: Applicable only for Organisation partyType
            properties:
              code:
                type: string
                description: Industry code
                example: "1234"
              description:
                type: string
                description: Description OF the Industry
                example: Education
          occupation:
            type: object
            properties:
              code:
                type: string
                description: Occupation code
                example: "99910"
              description:
                type: string
                description: Description for the Occupation code and only applicable for
                  Individuals. Not mapped yet.
                example: Student
          addresses:
            type: array
            items:
              $ref: '#/definitions/Address'
          phones:
            type: array
            items:
              $ref: '#/definitions/Phone'
          faxes:
            type: array
            items:
              $ref: '#/definitions/Fax'
          emails:
            type: array
            items:
              $ref: '#/definitions/Email'
          identifiers:
            type: array
            items:
              $ref: '#/definitions/Identifier'
          names:
            type: array
            description: Mandatory for Person and Organisations
            items:
              $ref: '#/definitions/Name'
          preferences:
            type: array
            items:
              $ref: '#/definitions/PrivacyPreference'
          commercialContacts:
            type: array
            items:
              $ref: '#/definitions/CommercialContacts'
          sourceSystems:
            type: array
            items:
              $ref: '#/definitions/SourceSystem'
      Account:
        type: object
        properties:
          accountNumber:
            type: string
            description: Account Number
            example: "708405438"
          accountOpenedDate:
            type: string
            description: Account Open Date
            format: date
            example: "2005-05-14"
          accountClosedDate:
            type: string
            description: Account Closed Date
            format: date
            example: "2010-05-14"
          accountBranchNumber:
            type: string
            description: Account Branch Number
            example: "01"
          accountNameOne:
            type: string
            description: Agreement Name
            example: GAURA ENTERPRISES PTY LTD
          accountNameTwo:
            type: string
            description: Agreement Name Two
            example: ACN 123 301 790 IIOC & ATF DEVA
          accountNameThree:
            type: string
            description: Agreement Name Three
            example: KATHA TRUST
          accountShortName:
            type: string
            description: Agreement Nickname
            example: DEVA KATHA TRU
          accountStatus:
            type: string
            description: Account Status
            example: Active
          accountStatusRaw:
            type: string
            description: Account raw status
            example: Validated
          relationshipType:
            type: string
            description: RelationshipType
            example: GTR
          productCode:
            type: string
            description: 'Account Product Code for the Source System. Product Code is
              separated by : from the SourceSystem. In the eg. CAP-CIS is the source system
              and dda is product code'
            example: CAP-CIS:DDA
          accountSubProduct:
            type: string
            description: 'Account Sub Product Code for the Source System. Sub Product
              Code is separated by : from the SourceSystem. In the eg. CAP-CIS is the
              source system and ddabc is sub product code'
            example: CAP-CIS:DDABC
          companyId:
            type: string
            description: companyId
            example: "01"
          numberOfSignatures:
            type: string
            description: Number Of Signatures
            example: "2"
          regulatedIndicator:
            type: string
            description: Regulated Indicator
            example: "Y"
          marketingCode:
            type: string
            description: Marketing code represents the product code for the package, account
              or service (card) that the customer subscribes to. Possible values are -
              TRANSACT&SAVING01 for package, TRANSACT01 for DDA account, SAVING01 for
              Savings account, CVDC for VISA debit card.
            example: TRANSACT&SAVING01
          accountType:
            type: string
            description: Type of the contract. Must be present for add and update package
              request. Possible values - PACKAGE, ACCOUNT, SERVICE.
            example: PACKAGE
          addresses:
            type: array
            items:
              $ref: '#/definitions/RoleAddress'
          atomicAttributes:
            type: array
            items:
              $ref: '#/definitions/AtomicAttribute'
      RoleAddress:
        type: object
        required:
        - addressLineOne
        - country
        properties:
          addressUsageType:
            type: string
            description: Address Usage Type
            example: Primary Residential
          addressLineOne:
            type: string
            description: Address line one
            example: 56-L
          addressLineTwo:
            type: string
            description: Address line two
            example: Near Dev Park
          addressLineThree:
            type: string
            description: Address line three
            example: Model Town
          addressLineFour:
            type: string
            description: Address line Four
            example: Model Town
          addressLineFive:
            type: string
            description: Address line Five
            example: Model Town
          addressLineSix:
            type: string
            description: Address line Six
            example: Model Town
          city:
            type: string
            description: City Name
            example: Melbourne
          postalCode:
            type: string
            description: Postal Code
            example: "3168"
          residenceNumber:
            type: string
            description: Unit No/Level No
            example: Unit 1809
          residenceType:
            type: string
            description: residence Type
            example: Apartment
          buildingName:
            type: string
            description: Building Name
            example: 'Victor selvia '
          streetNumber:
            type: string
            description: Street Number
            example: 173 City Road
          streetPrefix:
            type: string
            description: Street Prefix
            example: Road
          streetName:
            type: string
            description: Street Name
            example: City Road
          streetSuffix:
            type: string
            description: Street Suffix
            example: Saint
          countyCode:
            type: string
            description: County Code
            example: "035"
          latitudeDegrees:
            type: string
            description: degree of latitude
            example: "176"
          longitudeDegrees:
            type: string
            description: degree of longitude
            example: "24"
          postalBarCode:
            type: string
            description: postal Bar Code
            example: "62626"
          preDirectional:
            type: string
            description: directional information for delivery
            example: North Bay Street
          postDirectional:
            type: string
            description: directional information for delivery
            example: Bay Drive West
          boxDesignator:
            type: string
            description: Box Designator
            example: SouthCity
          boxId:
            type: string
            description: Box ID
            example: "8392"
          stnInfo:
            type: string
            description: stn information
            example: SouthBank
          stnId:
            type: string
            description: stn ID
            example: "2627"
          delDesignator:
            type: string
            description: Postal Delivery Type
            example: GPO BOX
          delInfo:
            type: string
            description: Postal Delivery Number
            example: 19 in PO BOX 19
          country:
            type: string
            description: Country Name
            example: AUS
          state:
            type: string
            description: OCV Standardised value
            example: AU-VI
          region:
            type: string
            description: RAW State value
            example: VIC
          deliveryId:
            type: string
            description: Delivery ID
            example: "34438539"
          source:
            type: string
            description: Source System Name
            example: CAP-CIS
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2001-01-01"
          endDate:
            type: string
            description: End Date
            format: date
            example: "2019-05-20"
          sequenceNumber:
            type: string
            description: sequenceNumber
            example: "1"
          atomicAttributes:
            type: array
            items:
              $ref: '#/definitions/AtomicAttribute'
          validationDetails:
            type: array
            items:
              $ref: '#/definitions/ValidationDetails'
          verificationDetails:
            type: array
            items:
              $ref: '#/definitions/VerificationDetails'
      AtomicAttribute:
        type: object
        properties:
          type:
            type: string
            description: Attribute type
            example: Eligibility Flag
          value:
            type: string
            description: value for all attribute types, i.e Eligibility Flag,  Mailing
              Indicator,Mailing Title1,Mailing Title2
            example: "Y"
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2001-01-01"
          endDate:
            type: string
            description: End Date
            format: date
            example: "2019-05-20"
          source:
            type: string
            description: Source system name
            example: CAP-CIS
      ValidationDetails:
        type: object
        properties:
          validatedBy:
            type: string
            description: Validated By
            example: self service
          status:
            type: string
            description: Status of the address
            example: Valid
          validationDate:
            type: string
            description: Validation Date
            format: date
            example: "2001-01-01"
          statusReason:
            type: string
            description: Reason for the status
            example: Address Exist
          validationMethod:
            type: string
            description: Validation Method
            example: drivers license
          channel:
            type: string
            description: Channel
            example: customer hub
          reValidationTimeDesignator:
            type: string
            description: Time Designator for revalidation
            example: Month
          reValidationTimeInterval:
            type: string
            description: Interval  for revalidation
            example: "6"
          reValidationDate:
            type: string
            description: Revalidation Date
            format: date
            example: "2020-05-20"
      VerificationDetails:
        type: object
        properties:
          verifiedBy:
            type: string
            description: Verified By
            example: self service
          documentReference:
            type: string
            description: document Reference
            example: 045678
          verifiedDate:
            type: string
            description: Verified Date
            format: date
            example: "2001-01-01"
          verificationMethod:
            type: string
            description: Verification Method
            example: drivers license
          channel:
            type: string
            description: Channel
            example: customer hub
          reVerificationTimeDesignator:
            type: string
            description: Time Designator for reVerification
            example: Month
          reVerificationTimeInterval:
            type: string
            description: Interval  for reVerification
            example: "6"
          reVerificationDate:
            type: string
            description: ReVerification Date
            format: date
            example: "2020-05-23"
      Link:
        type: object
        properties:
          rel:
            type: string
            description: It describes the type of relative link
            example: next
          href:
            type: string
            description: url for the relative link
            format: string
            example: /parties/retrieve?includeAccounts=true&offset=7&limit=5
      IdentifierHistorical:
        type: object
        properties:
          identifierUsageType:
            type: string
            description: Identifier Usage Type
            example: ABN
          identifier:
            type: string
            description: Identifier
            example: "12345679801"
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2019-05-14"
          endDate:
            type: string
            description: End Date
            format: date
            example: "2040-05-14"
      KYCVerification:
        type: object
        properties:
          verificationDate:
            type: string
            description: Verification Date
            format: date
            example: "1901-01-01"
          verificationMethodType:
            type: string
            description: Verification Method Type
            example: EV
          verificationStatusType:
            type: string
            description: Verification Status Type
            example: Pass
          kycVerificationLevelType:
            type: string
            description: KYC Verification Level Type
            example: VE
          kycStatusType:
            type: string
            description: KYC Status Type
            example: CO
          evServiceProvider:
            type: string
            description: Electronic Verification Service Provider
            example: Equifax
          evConsentProvided:
            type: string
            description: Electronic Verification Consent Provided
            example: "Y"
          evConsentDate:
            type: string
            description: Electronic Verification Consent Date
            format: date
            example: "1901-01-01"
          evResponseId:
            type: string
            description: Electronic Verification Response Id
            example: 191212-CA4CU-0ABH7
          evOverallMatchStatus:
            type: string
            description: Electronic Verification Overall Match Status
            example: Match
          evSubmittedDate:
            type: string
            description: Electronic Verification Submitted Date
            format: date
            example: "2001-01-01"
          evSubmittedBy:
            type: string
            description: Electronic Verification Submitted By
            example: FENERGOANZX
          evServiceRequestStatus:
            type: string
            description: Electronic Verification Service Request Status
            example: Active
          source:
            type: string
            description: Source System Name
            example: FENERGOANZX
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2001-01-01"
          endDate:
            type: string
            description: End Date
            format: date
            example: ""
          kycVerificationDocRef:
            type: array
            items:
              $ref: '#/definitions/KYCVerificationDocRef'
          evMatchStatus:
            type: array
            items:
              $ref: '#/definitions/EVMatchStatus'
      DocumentReference:
        type: object
        properties:
          contentRef1:
            type: string
            description: Content reference 1
            example: http://Link1
          contentRef2:
            type: string
            description: Content reference 2
            example: ""
          contentRef3:
            type: string
            description: Content reference 3
            example: ""
          contentRef4:
            type: string
            description: Content reference 4
            example: ""
          contentVersion:
            type: string
            description: Content Version
            example: ""
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2001-01-01"
          endDate:
            type: string
            description: End Date
            format: date
            example: ""
          repositoryType:
            type: string
            description: Repository Type
            example: ""
          documentName:
            type: string
            description: Document Name
            example: ""
          author:
            type: string
            description: Author
            example: ""
      StrucAttribute:
        type: object
        properties:
          type:
            type: string
            description: Structure Attribute type
            enum:
            - TPMI Insurance Details
            - TPMI Commission Account
            - TPMI Key Contact
            - TPMI Comments
            - TPMI-SAO Credit License Details
            - TPMI-SAO Comments
            - TPMI-SAO Relationship Manager
            - TPMI-SAO Business Bank Manager
            - TPMI Broker Manager
            - TPMI-SAO Additional Info
            - TPMI Additional Info
            example: TPMI-SAO Additional Info
          value:
            type: string
            description: value for all attribute types, i.e Eligibility Flag,  Mailing
              Indicator,Mailing Title1,Mailing Title2
            example:
              date: "2020-12-03"
              comment: This is my Comments
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2001-01-01"
          endDate:
            type: string
            description: End Date
            format: date
            example: "2019-05-20"
          source:
            type: string
            description: Source system name
            example: CAP-CIS
      PartyMacroRole:
        type: object
        properties:
          roleValue:
            type: string
            description: Role Value
            example: Broler - Aggregator
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2019-05-14"
          roleCatValue:
            type: string
            description: Role Category Value
            example: Party Macro Role
          atomicAttributes:
            type: array
            items:
              $ref: '#/definitions/AtomicAttribute'
          structuredAttributes:
            type: array
            items:
              $ref: '#/definitions/StrucAttribute'
      AnzsicDetail:
        type: object
        properties:
          code:
            type: string
            description: ANZSIC code
            example: "2549"
          description:
            type: string
            description: Not mapped yet. Please refer industry.
            example: Chemical Product Mfg
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2001-01-01"
          source:
            type: string
            description: Source system name
            example: CAP-CIS
      KYCVerificationDocRef:
        type: object
        properties:
          identifierType:
            type: string
            description: Identifier Type
            example: Passport | Driving License
          occurenceNumer:
            type: string
            description: Occurence Number
            example: "1"
          startDate:
            type: string
            description: Start Date
            format: date
            example: "2019-05-14"
      EVMatchStatus:
        type: object
        properties:
          dataSourceName:
            type: string
            description: Tthe name of a data source used by the EV service provider to
              perform the identity verification
            example: National Tenancy Database or Australian Electoral Roll or  Drivers
              Licence - VIC
          matchStatus:
            type: string
            description: The result of the match attempt against a specific data source
            example: Match or NoMatch
      Consent:
        type: object
        description: A consent describes to which extent the personal data of an individual
          is allowed to be processed for a specific purpose.
        required:
        - processingPurposeType
        - agreeIndicator
        - consentDate
        - startDate
        - source
        properties:
          processingPurposeType:
            type: string
            description: The processing purpose this consent applies to.
            example: T&C Acceptance
          version:
            type: string
            description: Version for the consent processing purpose
            example: "1"
          agreeIndicator:
            type: string
            description: Indicates whether consent has been given.Possible values are
              0,1 and 2.0 to indicate that consent has been refused.1 to indicate that
              consent has been given.2 to indicate that partial consent has been given.
            example: "1"
          languageAgreedInValue:
            type: string
            description: References the language in which consent was given.Default is
              English
            example: English
          source:
            type: string
            description: References the system where consent was given.
            example: FENERGOANZX
          consentDate:
            type: string
            description: The date when the consent item was created.
            example: "2021-03-15"
            format: date
          startDate:
            type: string
            description: The date when the consent item becomes valid.
            example: "2021-03-15"
            format: date
          endDate:
            type: string
            description: The date when the consent item becomes invalid.
            example: "2021-03-15"
            format: date
          endReasonType:
            type: string
            description: The reason for why the consent item became inactive.
          consentProvisions:
            type: array
            items:
              $ref: '#/definitions/ConsentProvisions'
              description: A consent provision describes a restriction with regard to
                the consent given or refused for a processing purpose.
      ConsentProvisions:
        type: object
        description: A consent provision describes a restriction with regard to the consent
          given or refused for a processing purpose.
        required:
        - consentProvisionType
        - consentDate
        - startDate
        properties:
          content:
            type: string
            description: Description of what is included in the consent.
          consentProvisionType:
            type: string
            description: Describes with regard to the consent given.
            example: ANZx T&Cs
          consentDate:
            type: string
            description: The date when the consent item is added to the consent.
            example: "2021-03-15"
            format: date
          startDate:
            type: string
            description: The date when the consent provision becomes valid
            example: "2021-03-15"
            format: date
          endDate:
            type: string
            description: The date when the consent provision becomes invalid
            example: "2021-03-15"
            format: date
      Alert:
        type: object
        description: This is to identify alerts raised by any system/services with in
          the bank. Hence this model will help us to track alerts persisted within OCV
          for system/channel specific use cases.
        required:
        - alertType
        - alertStatusType
        - startDate
        properties:
          alertType:
            type: string
            description: Uniquely identifies the type of alert placed on the party/account.
            example: General, Task Comment
          alertStatusType:
            type: string
            description: Identifies the status of the alert placed for the party/account.
            example: Open, Under Investigation, Escalated, Re-opened, Closed, Resolved,
              Withdrawn
          createdByUser:
            type: string
            description: The ID of user who created the alert.
            example: userid
          removedByUser:
            type: string
            description: The ID of user who removed the alert.
            example: userid
          startDate:
            type: string
            description: The date when the alert becomes valid.
            example: "2021-03-15"
            format: date
          endDate:
            type: string
            description: The date when the alert becomes invalid.
            example: "2021-03-15"
            format: date
          description:
            type: string
            description: Provides extra space for information that can be used for an
              additional definition or as free form comments to provide further meaning.
            example: This complaints raised for user
            format: date
          atomicAttributes:
            type: array
            items:
              $ref: '#/definitions/AtomicAttribute'
    parameters:
      channel:
        name: channel
        type: string
        required: true
        in: header
        description: The channel name that is initiating the request
      userid:
        name: userid
        type: string
        required: true
        in: header
        description: User that is initiating the request
      X-B3-TraceId:
        x-example: 89b7fe72db29f5e6225ba02770da98d6
        description: A 128 bit length (lower hex) unique identifier for the trace. This
          is only generated when the first request is made. Every span in a trace shares
          this ID.
        in: header
        required: true
        type: string
        name: X-B3-TraceId
      X-B3-SpanId:
        x-example: efcf4dd20496ee2e69cad1250e68545c
        description: A 128 bit length (lower hex) unique ID of the service processing
          the request.
        in: header
        required: true
        type: string
        name: X-B3-SpanId
      X-B3-ParentSpanId:
        x-example: 3837dc3ba8fb342d70abf6454f27390d
        description: The ID of the originator of the request. This will generally be the
          same as the Trace ID for the first instance. A span without this ID is considered
          the root of the trace.
        in: header
        required: false
        type: string
        name: X-B3-ParentSpanId
    x-ibm-endpoints:
    - endpointUrl: https://api.corp.dev.anz
      description: Custom Gateway API Endpoint
      type:
      - production
      - development
    ...
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: anz.ocv.maintaincontract
  description: "OCV Maintain Contract API includes operations to create/update Accounts"
  links:
    - url: https://sandpit.developer.dev.anz/eapicorp01/sandpit/node/2354
      title: Spec
      icon: dashboard
spec:
  type: openapi
  lifecycle: production
  definition: |
    ---
    info:
      x-ibm-name: ocv-maintain-contract-api
      title: OCV Maintain Contract API
      version: 1.0.0
      description: OCV Maintain Contract API includes operations to create/update Accounts
      contact:
        name: ANZ EAPI
        email: eapi@anz.com
      x-api-ownership:
        technology-owner:
          name: Kshitij Nema
          role: Tribe Performance Lead
          email: Kshitij.Nema@anz.com
        business-owner:
          name: Kim Veitch
          role: Product Owner
          email: Kim.Veitch@anz.com
      x-information-security:
        confidentiality-rating: Internal
        integrity-rating: Trusted
    schemes:
    - https
    basePath: /ocv/ocv-maintain-contract-api
    swagger: "2.0"
    x-ibm-configuration:
      enforced: true
      phase: realized
      testable: true
      categories:
      - LOB/Customer
      - Phase/UAT Ready
    paths:
      /accounts-maintenance:
        parameters:
        - $ref: '#/parameters/Channel'
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/RequestTime'
        - $ref: '#/parameters/RequestMode'
        - $ref: '#/parameters/X-B3-TraceId'
        - $ref: '#/parameters/X-B3-SpanId'
        - $ref: '#/parameters/X-B3-ParentSpanId'
        - $ref: '#/parameters/Accept'
        post:
          tags:
          - accounts
          summary: Maintain accounts in OCV
          description: Capability for channels (e.g. ANZx) to directly maintain the account
            data in OCV
          produces:
          - application/json
          consumes:
          - application/json
          parameters:
          - name: AccountData
            in: body
            description: Maintain Account payload
            schema:
              $ref: '#/definitions/AccountData'
          responses:
            200:
              description: Indicates successful operation when the package/contract is
                created.
              schema:
                $ref: '#/definitions/AccountDataResponse'
            204:
              description: Indicates successful operation when the package/contract is
                updated. Please note the response body would be empty.
            400:
              description: Invalid Input
              schema:
                $ref: '#/definitions/ErrorResponse'
            403:
              description: Forbidden
              schema:
                $ref: '#/definitions/ErrorResponse'
            404:
              description: Not found
              schema:
                $ref: '#/definitions/ErrorResponse'
            500:
              description: Internal Server Error
              schema:
                $ref: '#/definitions/ErrorResponse'
            default:
              description: Unexpected error
              schema:
                $ref: '#/definitions/ErrorResponse'
          x-scopes:
          - AU.ANZ_INTERNAL.OCV.ANZX.ACCESS.CONTRACT.UPDATE
    definitions:
      ErrorResponse:
        type: object
        required:
        - httpCode
        - httpMessage
        properties:
          httpCode:
            type: string
            description: HTTP Status Code
            example: "400"
          httpMessage:
            type: string
            description: HTTP Reason Phrase
            example: Bad Request
          errors:
            type: array
            items:
              type: object
              description: Detailed error object list.
              properties:
                statusCode:
                  type: string
                  description: Status code
                  example: "4041"
                statusMessage:
                  type: string
                  description: System error message
                  example: Record not found
                moreInformation:
                  type: string
                  description: Additional error information
                  example: Package not found
                location:
                  type: string
                  description: Error originating system
                  example: OCV
      AccountData:
        type: object
        required:
        - accountType
        - productCode
        - accountSource
        properties:
          accountNumber:
            type: string
            description: Signifies the contract number, e.g. Package number or Account
              number. Must not be present in case of Create package payload.
            example: "6688223654"
          accountType:
            type: string
            description: Type of the contract. Must be present for add and update package
              request. Possible values - PACKAGE, ACCOUNT, SERVICE.
            example: PACKAGE
          productCode:
            type: string
            description: Product code for the Package, Account or card. Mandatory for
              the create package, delta package update, or other linking flow such as
              P2A and A2C. Possible values - ANZPLUS, DDA, PDV.
            example: ANZPLUS
          accountNameOne:
            type: string
            description: Package/contract Name One
            example: John Duo
          accountNameTwo:
            type: string
            description: Package/contract Name Two
            example: John Duo
          accountNameThree:
            type: string
            description: Package/contract Name Three
            example: John Duo
          accountShortName:
            type: string
            description: The nick name of the package/contract
            example: John Duo
          accountSubProduct:
            type: string
            description: Sub product code of the Account or Service (card). Not applicable
              for Package. Possible values are - XD for DDA & Savings account , 101 for
              VISA Debit card.
            example: XD
          accountCurrency:
            type: string
            description: Package currency. Possible values - AUD, NZD, U.S. Dollar, Canadian
              Dollar and so on.
            example: AUD
          accountOpenedDate:
            type: string
            description: Date on which the package is opened. If not present, Current_Timestamp
              will be used instead.
            format: date (yyyy-mm-dd)
            example: "2020-05-31"
          accountClosedDate:
            type: string
            description: Date on which the package is closed.
            format: date (yyyy-mm-dd)
            example: "2020-05-31"
          accountBranchNumber:
            type: string
            description: Account or Service(card) branch number. Not applicable for the
              Package.
            example: "3110"
          accountStatus:
            type: string
            description: Identifies the status of the Package, Account or Service (Card).
              Values should be in the form of source specific raw status's. For example,
              transact and savings account of type DDAXD the raw status's are - 03, 05,
              06, 07, 12, 80, 82, 99, 08 which signify the EDG standardised status's like
              Dormant, Dormant, Dormant, Closed, Active, Active, Dormant, Active & Closed
              respectively. Package of type ANZPLUS the raw status's are - Active, Inactive
              and Open which signify the EDG standardised status's like Active, Dormant
              and Open respectively.
            example: "99"
          accountSource:
            type: string
            description: Originating Source system. Possible values are- ZAFIN for package,
              CAP-CIS for Transact & Savings account, CTM for VISA Debit card.
            example: ZAFIN
          marketingCode:
            type: string
            description: Marketing code represents the product code for the package, account
              or service (card) that the customer subscribes to. Possible values are -
              ANZPLUS for package, TRANSACT01 for DDA account, SAVING01 for Savings account,
              CVDC for VISA debit card.
            example: ANZPLUS
          addresses:
            type: array
            description: Signifies Addresses linked to an Account/card. This block won't
              exist in the Create Package flow.
            items:
              $ref: '#/definitions/AccountAddressRequest'
          linkedParties:
            type: array
            description: Signifies Party-to-Package relationship. Mandatory for create
              package scenario.
            items:
              $ref: '#/definitions/LinkedPartiesRequest'
          linkedAccounts:
            type: array
            description: Account(s) or Service (Card) to be mapped to a package or account.
              Mandatory for linking Package-to-Account, Account-to-Card scenario. This
              block won't exist in the Create Package flow.
            items:
              $ref: '#/definitions/LinkedAccountsRequest'
      AccountRelationshipsRequest:
        type: object
        required:
        - relationshipValue
        description: Signifies different contract-to-contract relationships for this contract
          holds. This block is required for the Update Package with linking contract (Account
          / Service) flow.
        properties:
          startDate:
            type: string
            description: Package-to-Account or Account-to-Card relationship start date.
              If not present, Current_Timestamp will be used instead.
            format: date (yyyy-mm-dd)
            example: "2020-05-31"
          endDate:
            type: string
            description: Package-to-Account or Account-to-Card relationship end date
            format: date (yyyy-mm-dd)
            example: "2020-05-31"
          status:
            type: string
            description: Status of the Package-to-Account or Account-to-Card relationship.
              Possible values - Active, Inactive, Cancelled, Pending, Suspended and Replaced.
            example: Active
          relationshipValue:
            type: string
            description: Possible values are - Component of, Fee Debit Account For. Component
              of - this signifies Package-to-Account or Account-to-Card relationship,
              whereas, Fee Debit Account For signifies - charging account indicator for
              a package. Please note, these values are case sensitive and is required
              for the Update Package with linking contract (Account / Service) flow.
            example: Component of
      LinkedPartiesRequest:
        type: object
        description: Ownership to the Contract (Package / Account / Service). This block
          is required for the create contract (Package / Account / Service) flow.
        required:
        - relationshipType
        - party
        properties:
          relationshipType:
            type: string
            description: Type of ownership on the contract. Possible values - SOL, COO
              (not in beta phase). This attribute is required for the create/update contract
              (Package / Account / Service) flow.
            example: SOL
          startDate:
            type: string
            description: Party-to-Contract relationship start date.  If not present, Current_Timestamp
              will be used instead.
            format: date (yyyy-mm-dd)
            example: "2020-05-31"
          endDate:
            type: string
            description: Party-to-Contract relationship end date
            format: date (yyyy-mm-dd)
            example: "2020-05-30"
          party:
            type: object
            required:
            - ocvId
            properties:
              ocvId:
                type: string
                description: OCV Id of the ANZx customer having ownership of the package.
                example: "304456780"
      AccountAddressRequest:
        type: object
        description: Signifies address(s) linked to a contract. Address block contains
          many optional attributes. Please get in touch with OCV team and based on your
          context we can mutually finalise the contract address structure.
        required:
        - addressUsageType
        - addressLineOne
        - city
        - region
        - postalCode
        properties:
          addressUsageType:
            type: string
            description: Address type. For the Package Entitlement flow, this will be
              always Statement address. Possible values - Primary Residential, Primary
              Mailing, Statement
            example: Statement
          addressLineOne:
            type: string
            maxLength: 40
            description: 1st line of the Address.
            example: UNIT 1
          addressLineTwo:
            type: string
            maxLength: 40
            description: 2nd line of the Address.
            example: 16 MELBOURNE AVENUE
          addressLineThree:
            type: string
            maxLength: 40
            description: 3rd line of the Address.
            example: GLENROY
          addressLineFour:
            type: string
            description: Address line Four
            example: Model Town
          addressLineFive:
            type: string
            description: Address line Five
            example: Model Town
          addressLineSix:
            type: string
            description: Address line Six
            example: Model Town
          city:
            type: string
            maxLength: 25
            description: City / Suburb of the address. Must be valid combination with
              Postcode and State.
            example: MELBOURNE
          postalCode:
            type: string
            maxLength: 9
            description: Postcode of the address. Must be valid combination with State
              and City.
            example: "3046"
          postalBarCode:
            type: string
            description: ""
            example: ""
          residenceNumber:
            type: string
            description: Residence Number
            example: "9"
          residenceType:
            type: string
            description: Residence Type
            example: ""
          state:
            type: string
            description: State that the address is located. Must be valid combination
              with Postcode and City.
            example: VIC
          countyCode:
            type: string
            description: The International Standard code (ISO) formatted country code.
              Required for Overseas Addresses.
            example: AUS
          country:
            type: string
            description: Name of the country.
            example: Australia
          latitudeDegrees:
            type: string
            description: degree of latitude
            example: "176"
          longitudeDegrees:
            type: string
            description: degree of longitude
            example: "24"
          buildingName:
            type: string
            description: Building Name
            example: Titanic
          preDirectional:
            type: string
            description: Directional information for delivery
            example: North Bay Street
          streetNumber:
            type: string
            description: Street Number
            example: "16"
          streetPrefix:
            type: string
            description: Street Prefix
            example: Road
          streetName:
            type: string
            description: Street Name
            example: WIDFORD STREET
          streetSuffix:
            type: string
            description: Street Suffix
            example: DR
          postDirectional:
            type: string
            description: directional information for delivery
            example: Melbourne Avenue West
          stnInfo:
            type: string
            description: Station information
            example: GLENROY
          stnId:
            type: string
            description: Station id
            example: "20032"
          boxDesignator:
            type: string
            description: Box Designator
            example: SouthCity
          boxId:
            type: string
            description: Box ID
            example: "8392"
          region:
            type: string
            description: Region
            example: VIC
          delDesignator:
            type: string
            description: Postal Delivery Type
            example: GPO BOX
          deliveryId:
            type: string
            maxLength: 9
            description: DPID (Delivery Point Identifier) which is an ID that Australia
              Post assigns to each address in their system.
            example: "12345678"
          delInfo:
            type: string
            description: Postal Delivery Number
            example: 19 in PO BOX 19
          source:
            type: string
            description: Source System Name. ZAFIN for package, CAP-CIS for account, CTM
              for debit card.
            example: CAP-CIS
          preferred:
            type: string
            description: Preferred Indicator
            example: "Y"
          sequence:
            type: string
            description: Sequence
            example: "1"
          startDate:
            type: string
            description: Start Date represents the date from which the account address
              data became valid.
            format: date (yyyy-mm-dd)
            example: "2020-05-31"
          endDate:
            type: string
            description: End Date represents the date from which the account address data
              became invalid.
            format: date (yyyy-mm-dd)
            example: "2020-05-31"
          validationDetails:
            $ref: '#/definitions/ValidationDetails'
          verificationDetails:
            $ref: '#/definitions/VerificationDetails'
          occurrenceNumber:
            type: string
            description: Occurrence Number
            example: "00"
          atomicAttributes:
            type: array
            description: Additional attributes to be part of the account address.
            items:
              $ref: '#/definitions/AtomicAttributesRequest'
      ValidationDetails:
        type: object
        properties:
          validatedBy:
            type: string
            description: Validated By
            example: self service
          status:
            type: string
            description: Status of the address
            example: Valid
          validationDate:
            type: string
            description: Validation Date
            format: date (yyyy-mm-dd)
            example: "2001-01-01"
          statusReason:
            type: string
            description: Reason for the status
            example: Address Exist
          validationMethod:
            type: string
            description: Validation Method
            example: drivers license
          channel:
            type: string
            description: Channel
            example: ANZx
          reValidationTimeDesignator:
            type: string
            description: Time Designator for revalidation
            example: Month
          reValidationTimeInterval:
            type: string
            description: Interval  for revalidation
            example: "6"
          reValidationDate:
            type: string
            description: Revalidation Date
            format: date (yyyy-mm-dd)
            example: "2020-05-20"
      VerificationDetails:
        type: object
        properties:
          verifiedBy:
            type: string
            description: Verified By
            example: self service
          documentReference:
            type: string
            description: document Reference
            example: 045678
          verifiedDate:
            type: string
            description: Verified Date
            format: date (yyyy-mm-dd)
            example: "2001-01-01"
          verificationMethod:
            type: string
            description: Verification Method
            example: drivers license
          channel:
            type: string
            description: Channel
            example: ANZx
          reVerificationTimeDesignator:
            type: string
            description: Time Designator for reVerification
            example: Month
          reVerificationTimeInterval:
            type: string
            description: Interval  for reVerification
            example: "6"
          reVerificationDate:
            type: string
            description: ReVerification Date
            format: date (yyyy-mm-dd)
            example: "2020-05-23"
      AtomicAttributesRequest:
        type: object
        description: Signifies Atomic attributes for the Account Address.
        required:
        - type
        - value
        properties:
          type:
            type: string
            description: Additional atomic attributes to be part of the account address.
              Possibles values - ACCOUNT TITLE 1, ACCOUNT TITLE 2, ELIGIBILITY FLAG, NOMINATED
              MAILING INDICATOR, NOMINATED ADDRESS USAGE TYPE. For the MailingTitle1 and
              MailingTitle2 use the value - ACCOUNT TITLE 1 & ACCOUNT TITLE 2 respectively.
            example: ACCOUNT TITLE 1
          value:
            type: string
            description: The actual value of the attribute being created/maintained.
            example: SHARLOK
          startDate:
            type: string
            description: Start Date
            format: date (yyyy-mm-dd)
            example: "2020-05-31"
          endDate:
            type: string
            description: End Date
            format: date (yyyy-mm-dd)
            example: "2020-05-31"
          source:
            type: string
            description: Source system name. Possible values are- ZAFIN for package, CAP-CIS
              for DDA & Savings account, CTM for VISA Debit card.
            example: CAP-CIS
      LinkedAccountsRequest:
        type: object
        description: Account(s) or Service (Card) to be linked to a package or Account
          respectively. Must not be present for create package scenario. For Account-to-Card
          scenario,accountNumber field is expected to be tokenized as it represents a
          Debit Card Number. In order to successfully detokenize the card number, productCode
          and accountSubProduct will be validated for values PDV and 101 respectively.For
          all other combinations of productCode and accountSubProduct detokenization will
          not happen.
        required:
        - account
        properties:
          account:
            type: object
            required:
            - accountNumber
            - accountType
            - productCode
            - accountSource
            properties:
              accountNumber:
                type: string
                description: DDA, Savings Account or VISA Debit Card number. Mandatory
                  for the package-to-account & account-to-card link scenario.
                example: "30887255367"
              accountType:
                type: string
                description: Account or Card or Service. Mandatory for the package-to-account
                  & account-to-card link scenario. Possible values - ACCOUNT, SERVICE.
                example: ACCOUNT
              accountNameOne:
                type: string
                description: The name of the agreement or contract
                example: John Duo
              accountNameTwo:
                type: string
                description: In CAP the account name can span across 3 separate fields.  These
                  additional custom fields are used to ensure the full account name is
                  captured in OCV
                example: John Duo
              accountNameThree:
                type: string
                description: In CAP the account name can span across 3 separate fields.  These
                  additional custom fields are used to ensure the full account name is
                  captured in OCV
                example: John Duo
              accountShortName:
                type: string
                description: The alternate name of the contract
                example: John Duo
              productCode:
                type: string
                description: Identifies the type of product associated with the account
                  or card. Mandatory for the CAP Account & Service creation scenario.
                  Possible values- DDA, PDV
                example: DDA
              accountSubProduct:
                type: string
                description: Sub product code for the Account or Service. Possible values
                  - XD, 101. Mandatory for Lost/Stolen card scenario.
                example: XD
              accountOpenedDate:
                type: string
                description: Account or Service start date. If not present, Current_Timestamp
                  will be used instead.
                format: date (yyyy-mm-dd)
                example: "2020-05-31"
              accountClosedDate:
                type: string
                description: Account end date.
                format: date (yyyy-mm-dd)
                example: "2020-05-31"
              accountStatus:
                type: string
                description: Identifies the status of the Account or Service (Card). Values
                  should be in the form of source specific raw status's. For example,
                  transact and savings account of type DDAXD the raw status's are - 03,
                  05, 06, 07, 12, 80, 82, 99, 08 which signify the EDG standardised status's
                  like Dormant, Dormant, Dormant, Closed, Active, Active, Dormant, Active
                  & Closed respectively.
                example: "99"
              companyId:
                type: string
                description: Account company id, signifies CAP country code. Mandatory
                  for CAP Account creation.
                example: "10"
              marketingCode:
                type: string
                description: ANZx product code. Possible values are - TRANSACT01 for DDA
                  account, SAVING01 for Savings account, CVDC for VISA debit card.
                example: TRANSACT01
              accountBranchNumber:
                type: string
                description: DDA or Savings Account branch number.
                example: "3227"
              accountSource:
                type: string
                description: Originating Source system for the Account & Service. Possible
                  values are - CAP-CIS for Account & CTM for Service(Card).
                example: CAP-CIS
              addresses:
                type: array
                description: Signifies Addresses linked to an Account or Card.
                items:
                  $ref: '#/definitions/AccountAddressRequest'
              linkedParties:
                type: array
                description: 'Signifies Party-to-Account or Party-to-Card relationship.
                  Mandatory for the create account & service scenario. '
                items:
                  $ref: '#/definitions/LinkedPartiesRequest'
          accountRelationships:
            type: array
            description: Signifies different relationships this account holds. Required
              for update package with linking Account / Service scenario.
            items:
              $ref: '#/definitions/AccountRelationshipsRequest'
      AccountDataResponse:
        description: This response is only applicable for create package success scenario.
          For other success scenarios, HTTP status - 204 No Content will be returned
        type: object
        properties:
          accountNumber:
            type: string
            description: Signifies package Id
            example: "1000000172"
          accountType:
            type: string
            description: Type of the contract. Possible values - PACKAGE
            example: PACKAGE
    parameters:
      X-B3-TraceId:
        x-example: 89b7fe72db29f5e6225ba02770da98d6
        description: A 128 bit length (lower hex) unique identifier for the trace. This
          is only generated when the first request is made. Every span in a trace shares
          this ID.
        in: header
        required: true
        type: string
        name: X-B3-TraceId
      Channel:
        name: channel
        type: string
        required: true
        in: header
        description: The channel name that is initiating the request
        x-example: ANZx
      RequestTime:
        name: RequestTime
        type: string
        required: true
        in: header
        description: Request Time for maintainAccount.
      UserId:
        name: userid
        type: string
        required: true
        in: header
        description: User that is initiating the request
        x-example: "1234"
      RequestMode:
        name: requestMode
        type: string
        required: false
        in: header
        description: To identify interaction
      X-B3-SpanId:
        x-example: efcf4dd20496ee2e69cad1250e68545c
        description: A 128 bit length (lower hex) unique ID of the service processing
          the request.
        in: header
        required: true
        type: string
        name: X-B3-SpanId
      X-B3-ParentSpanId:
        x-example: 3837dc3ba8fb342d70abf6454f27390d
        description: The ID of the originator of the request. This will generally be the
          same as the Trace ID for the first instance. A span without this ID is considered
          the root of the trace.
        in: header
        required: false
        type: string
        name: X-B3-ParentSpanId
      Accept:
        name: Accept
        in: header
        description: Generated header parameter. Example value ='application/json'
        required: false
        type: string
        x-example: application/json
    x-ibm-endpoints:
    - endpointUrl: https://api.corp.dev.anz
      description: Custom Gateway API Endpoint
      type:
      - production
      - development
    ...

---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: anz.adp.transform
  description: ""
spec:
  type: openapi
  lifecycle: production
  definition: |
    ---
    info:
      title: Hashicorp Vault Transform
      version: 1.0.0
---
